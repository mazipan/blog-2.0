(window.webpackJsonp=window.webpackJsonp||[]).push([[24],{183:function(n,e){n.exports={body:'## Sekilas Mengenai AMP\n\nAMP (Accelerated Mobile Pages - [amp.dev ↗️](https://amp.dev)) merupakan inisiatif yang diawali oleh Google dalam membantu para publisher, developer dan para pemilik website agar bisa menyediakan website dengan kecepatan muat yang sangat cepat bahkan mendekati instan untuk device mobile. Untuk mencapai titik muat instan ini tentu tidak didapatkan secara gratis, ini dilakukan dengan peraturan ketat yang diterapkan oleh AMP. Ekstremnya bisa disebut bahwa AMP bahkan tidak memperbolehkan untuk menyisipkan sembarang skrip JavaScript ke dalam halaman website kita, ditambah dengan berbagai aturan ketat lainnya yang bisa menjamin bahwa website dengan dukungan AMP yang valid bisa tetap dimuat dengan kecepatan yang luar biasa cepat.\n\nAMP merupakan rekomendasi yang dianjurkan oleh Google langsung karena memiliki prioritas yang baik bagi hasil pencarian Google Search. Dan dengan rampingnya teknologi di dalamnya serta ditambah bantuan *cache* dari Google membuat AMP menjadi sangat cepat diakses dan sangat baik untuk digunakan sebagai halaman pertama bagi pengunjung yang datang dari hasil Google Search ini.\n\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png" alt="Mazipan AMP" height="200px" width="200px">\n\n## Dasar-dasar Membuat AMP\n\nHalaman AMP memang menjadi halaman yang terpisah dari halaman aslinya, ini dikarenakan terlalu banyak aturan ketat yang membuat teknologi website pada umumnya akan susah untuk membuat halaman AMP yang valid. Halaman AMP seperti ibarat halaman kopian dari halaman asli yang telah kita buat sebelumnya namun dengan memenuhi berbagai aturan yang telah ditetapkan oleh AMP.\n\nUntuk membuat halaman AMP pertama kita, pertama kita perlu menambahkan identifikasi pada tag `html` bahwa halaman tersebut merupakan versi AMP.\n\nBila sebelumnya kita menulis html seperti berikut:\n\n```html\n<html>\n  <head></head>\n  <body></body>\n<html>\n```\n\nMaka di AMP kita akan menambahkan emoji ⚡ pada tag `html` seperti berikut:\n\n```html\n<html ⚡>\n  <head></head>\n  <body></body>\n<html>\n```\n\nAtau bila kita tidak senang menggunakan emoji bisa menggantinya dengan atribut `amp` tanpa perlu mengisi nilai apapun pada atribut tersebut.\n\nSetelahnya kita bisa menambahkan skrip utama untuk mendukung AMP dengan menambahkan kode berikut:\n\n```html\n<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n```\n\nSerta menambahkan CSS wajib atau disebut *boilerplate* untuk halaman AMP berikut:\n\n```html\n<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n```\n\nPerlu diketahui bahwa kita tidak boleh menambahkan skrip JavaScript apapun selain yang sudah dibuatkan oleh AMP sendiri atau biasa dikenal dengan komponen AMP, jadi kita diharuskan untuk menghapus semua link untuk memuat berbagai JavaScript.\n\nPun dengan CSS, tidak diperbolehkan bagi kita untuk memuat eksternal CSS sehingga harus menghapus semua link yang memuat CSS dari luar. Bila kita membutuhkan CSS tambahan, kita bisa menggunakan internal CSS dengan tag `style` dengan atribut wajib yakni `amp-custom` seperti contoh berikut:\n\n```html\n<style amp-custom>\n  .custom-class {}\n</style>\n```\n\nDalam menggunakan CSS pun ada hal yang perlu diperhatikan, seperti tidak bolehnya kita menggunakan `!important`.\n\nPada dasarnya kita bebas menggunakan berbagai tag HTML pada halaman AMP kita, namun dengan aturan ketat AMP yang meyarankan untuk menggunakan komponen yang telah mereka buat untuk membangun berbagai hal umum, maka ada baiknya bila kita sempatkan untuk membaca halaman dokumen resmi dari AMP mengenai komponen apa saja yang telah disediakan dan bisa kita gunakan pada halaman AMP. Selengkapnya silakan baca di halaman [komponen AMP ↗️](https://amp.dev/documentation/components/?format=websites).\n\n## Membuat AMP di Nuxt.js\n\nAwalnya merupakan hal yang sangat sulit untuk membangun halaman AMP yang valid dengan menggunakan framework yang berbasiskan JavaScript, ini dikarenakan AMP sendiri melarang penggunaan JavaScript yang justru pada framework tersebut telah menjadi sebuah tulang punggung dari website kita.\n\nNamun dengan perkembangan framework JavaScript akhir-akhir termasuk Nuxt.js di dalamnya, hal yang tadinya tidak terfikirkan untuk dikerjakan menjadi mungkin meskipun masih tergolong rumit tertutama bagi para pengembang web pendatang baru.\n\nUntuk blog saya sendiri memang dibangun diatas Nuxt.js yang memanfaatkan kemampuan untuk memproduksi file statis sehingga lebih mudah bagi saya untuk menyajikan website ini. Sayangnya file statis hasil buatan Nuxt.js masih mengandung eksternal JavaScript dan CSS yang sudah kita bahas bahwa hal ini dilarang dalam sebuah halaman AMP. Jadi hal berat yang akan kita kerjakan adalah melakukan pembersihan terhadap halaman AMP yang dihasilkan oleh Nuxt.js ini.\n\nBerikut langkah-langkah yang saya kerjakan untuk membuat halaman AMP untuk blog saya:\n\n### 1. Membuat halaman baru\n\nKarena halaman AMP merupakan kloningan halaman aslinya maka kita perlu membuat halaman baru yang kontennya mendekati konten aslinya. Saya membuat semua halaman AMP berada dibawah satu akar URL yang sama yakni `/amp/**` agar mudah bagi saya untuk mendeteksi mana halaman asli dan mana halaman AMP.\n\n### 2. Hapus kode yang tidak diperlukan\n\nKarena di AMP nantinya kita akan menghapus semua penggunaan Javascript, maka kode-kode di bawah `methods` pada halaman AMP yang mana kebanyakan merupakan fungsi-fungsi yang mendukung interaktitas sebuah halaman website menjadi tidak diperlukan lagi. Dan karena saya juga tidak suka memelihara kode yang tidak diperlukan lagi, maka menghapus adalah pilihan terbaik yang bisa dikerjakan.\n\n### 3. Menambahkan hook saat generate\n\nSaya memanfaatkan fungsi `generate` milik Nuxt untuk memproduksi file statis blog saya, karenanya saya perlu menambahkan hook pada saat Nuxt melakukan proses ini agar hasilnya bisa saya manipulasi nantinya.\n\nUntuk melakukan hal diatas saya perlu menambahkan kode berikut di berkas `nuxt.config.js`:\n\n```javascript\nmodule.exports = {\n  hooks: {\n    \'generate:page\': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n      }\n    }\n  },\n}\n```\n\nKode diatas membuat kita bisa menyelipkan sebuah proses ketika Nuxt melakukan proses `generate` dan saya menambahkan sebuah *RegEx* untuk mendeteksi hanya halaman AMP saja yang akan diselipkan proses tambahan sementara untuk halaman normal kita tidak memerlukan.\n\n### 4. Memanipulasi HTML\n\nDari kode pada bagian sebelumnya kita mendapatkan objek `page` yang bila kita ambil property `page.html` adalah merupakan string HTML yang nantinya akan dijadikan file HTML sebagai keluaran akhir.\n\nSyukurnya saya menemukan artikel dari [toor.co ↗️](https://toor.co/blog/amp-pages-using-nuxt-js/) yang dari situ kita bisa temukan dasar dari fungsi yang bisa memanipulasi HTML string agar mendukung AMP.\n\nFungsinya kurang lebih seperti berikut:\n\n```javascript\nconst ampScript = \'<script async src="https://cdn.ampproject.org/v0.js"><\/script>\'\nconst ampBoilerplate = \'<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\'\n\nmodule.exports = (html) => {\n  // Add ⚡ to html tag\n  html = html.replace(/<html/gi, \'<html ⚡\')\n\n  // Combine css into single tag\n  let styleConcat = \'\'\n  html = html.replace(/<style[^>]*data-vue-ssr[^>]*>(.*?)?<\\/style>/gi, (match, sub) => {\n    styleConcat += sub\n    return \'\'\n  })\n  html = html.replace(\'</head>\', `<style amp-custom>${styleConcat}</style></head>`)\n\n  // Remove preload and prefetch tags\n  html = html.replace(/<link[^>]*rel="(?:preload|prefetch)?"[^>]*>/gi, \'\')\n\n  // Remove amphtml tag\n  html = html.replace(/<link[^>]*rel="(?:amphtml)?"[^>]*>/gi, \'\')\n\n  // Remove data attributes from tags\n  html = html.replace(/\\s*data-(?:[^=>]*="[^"]*"|[^=>\\s]*)/gi, \'\')\n\n  // Remove JS script tags except for ld+json\n  html = html.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, (match) => {\n    return (/application\\/ld\\+json/gi.test(match)) ? match : \'\'\n  })\n\n  // Replace img tags with amp-img\n  html = html.replace(/<img([^>]*)>/gi, (match, sub) => {\n    return `<amp-img ${sub} layout=intrinsic></amp-img>`\n  })\n\n  // Add AMP script before </head>\n  html = html.replace(\'</head>\', ampScript + ampBoilerplate + \'</head>\')\n\n  return html\n}\n```\n\nSeperti kalian bisa baca di bagian komentar pada kode diatas, bahwa kode diatas melakukan berbagai proses penggantian karakter (*replace*) menggunakan *RegEx* seperti menambahkan emoji ⚡, menggabungkan semua CSS internal ke dalam satu tag `<style amp-custom>`, menghilangkan berbagai JavaScript eksternal, menambahkan skrip utama dan CSS boilerplate AMP serta berbagai hal lainnya.\n\nFungsi ini saya letakan di direktory `plugins/ampify.js` yang kemudian dipanggil pada hook generate seperti berikut:\n\n\n```javascript\nconst ampify = require(\'./plugins/ampify\')\n\nmodule.exports = {\n  hooks: {\n    \'generate:page\': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n        page.html = ampify(page.html)\n      }\n    }\n  },\n}\n```\n\n### 5. Mengganti semua penggunaan scoped style menjadi un-scoped\n\nKarena saya termasuk cupu untuk bermain dengan *RegEx* maka mengutak-atik kode yang penuh dengan *RegEx* seperti diatas menjadi PR tersendiri.\n\nWalhasil ketika menyadari bahwa baris kode berikut ini:\n\n```javascript\n// Remove data attributes from tags\nhtml = html.replace(/\\s*data-(?:[^=>]*="[^"]*"|[^=>\\s]*)/gi, \'\')\n```\n\nTernyata mengakibatkan semua kode CSS *scoped* saya menjadi berantakan, maka pilihan terbaik adalah memindahkan semua *scoped* CSS kedalam CSS biasa yang bersifat global. Tentu bukan hal yang mudah karena saya sudah terbiasa dimudahkan dengan kemampuan Vue yang bisa membuat *scoped* CSS dengan sangat mudah. Pilihan menggunakan global CSS berarti memaksa saya kembali menggunakan konvensi CSS yang tetap mengedepankan prinsip *scoped* ini seperti BEM CSS.\n\nLangkah ini tidak perlu teman-teman ikuti bila memang teman-teman bisa melakukan modifikasi *RegEx* agar bisa melakukan penggantian karakter dengan lebih tepat tanpa menimbulkan efek samping pada CSS.\n\n### 6. Mengganti semua lazy load gambar\n\nPada halaman non-AMP, saya memanfaatkan pustaka [VueTinyLazyloadImg ↗️](https://github.com/mazipan/vue-tiny-lazyload-img) untuk melakukan lazy load pada setiap gambar yang dimuat. Sayangnya proses ini dikerjakan oleh JavaScript. Pada AMP hal ini tidak diperlukan lagi karena mereka memiliki komponen `amp-img` yang sudah mendukung lazy load.\n\nDengan menggunakan `amp-img` maka tag HTML saya untuk gambar menjadi tidak valid karena sebelumnya dengan pustaka yang saya gunakan diatas saya meletakan alamat gambar pada atribut `data-src` sementara pada atribut `src` hanya saya letakan gambar placeholder. Pilihan termudah adalah mengganti tag `data-src` menjadi tag `src` dan menghapus penempatan gambar placeholder pada atribut `src`.\n\nProses diatas bisa kita letakkan pada fungsi sebelumnya yang kita gunakan untuk melakukan penggantian karakter pada HTML string. Sebagai catatan bahwa kita perlu meletakan proses ini sebeleum penghilangan berbagai atribut `data-**` yang ada di dalam fungsi tersebut karena kita akan kehilangan atribut `data-src` bila dilakukan setelahnya.\n\nSementara untuk saat ini, saya memilih meletakan pada file .vue yang menjadi halaman AMP dimana disini dilakukan proses parsing konten *Markdown* menggunakan `frontmatter-markdown-loader`.\n\nFungsi yang saya buat seperti berikut:\n\n```javascript\nfunction replaceLazyloadImg (str) {\n  return str && str.replace(/"src":(?:[^=>][^"]*","data-src"|[^=>"]*)/gi, \'"src"\')\n}\n```\n\n### 7. Menambahkan ukuran pada gambar\n\nIni pekerjaan yang sampai artikel ini dipublikasikan masih belum sempat saya selesaikan. Menambahkan atribut `height` dan `width` pada konten Markdown yang menyertakan gambar di dalamnya.\n\n### 8. Menambahkan canonical\n\nKita perlu menautkan antara halaman AMP dengan halaman aslinya agar bisa dideteksi oleh Google bahwa halaman AMP tersebut merupakan representasi dari konten yang mana.\n\nCaranya adalah dengan menambahkan kode seperti berikut pada head halaman AMP:\n\n```html\n<head>\n  <link rel="canonical" href="alamat-halaman-asli"></link>\n</head>\n```\n\nDan kode berikut pada halaman aslinya:\n\n```html\n<head>\n  <link rel="amphtml" href="alamat-halaman-amp"></link>\n</head>\n```\n\nUntuk membuat dua kode diatas kita bisa menambahkan pada bagian `head()` pada file .vue dari halaman kita, seperti contoh berikut pada halaman AMP:\n\n```javascript\nexport default {\n  head () {\n    const url = `${this.productionUrl}/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'canonical\', rel: \'canonical\', href: url }\n      ]\n    }\n  }\n}\n```\n\nDan berikut yang saya sematkan pada halaman aslinya:\n\n```javascript\nexport default {\n  head () {\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'amphtml\', rel: \'amphtml\', href: ampUrl }\n      ]\n    }\n  }\n}\n```\n\n### 9. Menambahkan Google Analytics\n\nUntuk menambahkan Google Analytics pada halaman AMP memang sedikit berbeda dengan halaman biasa. Secara mudahnya, menambahkan Google Analytics bisa dilakukan dengan menambahkan skrip eksternal berikut:\n\n```html\n<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>\n```\n\nSerta menempatkan kode sederhana untuk melacak *page view* seperti berikut:\n\n```html\n<amp-analytics type=\'googleanalytics\'>\n  <script type=\'application/json\'>\n    {\n      "vars": {\n        "account": "UA-12345678-X"\n      },\n      "triggers": {\n        "trackPageview": {\n          "on": "visible",\n          "request": "pageview"\n        }\n      }\n    }\n  <\/script>\n</amp-analytics>\n```\n\nUntuk projek kita, kita bisa menyisipkan kode ini pada skrip `ampify` kita dengan sedikit perubahan seperti berikut:\n\n```javascript\nconst ampScript = `<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>`\n```\n\nKode di atas digunakan untuk menyisipkan skrip analytics yang dibutuhkan. Dan berikutnya kita akan menyisipkan skrip tracking sebelum tag penutup `</body>`, seperti contoh berikut:\n\n```javascript\n// Add AMP analytics\nhtml = html.replace(\'</body>\',\n`<amp-analytics type=\'googleanalytics\'>\n    <script type=\'application/json\'>\n      {\n        "vars": {\n          "account": "UA-12345678-X"\n        },\n        "triggers": {\n          "trackPageview": {\n            "on": "visible",\n            "request": "pageview"\n          }\n        }\n      }\n    <\/script>\n  </amp-analytics>\n</body>`)\n```\n\n## Test Validasi Halaman AMP\n\nSetelah proses selesai dan kalian sudah menghasilkan berkas statis yang mendukung AMP, jangan lupa untuk mengecek validasi dari halaman tersebut. Ada beberapa alternatif yang bisa kalian gunakan untuk melakukan test terhadap validasi AMP, diantaranya\n\n- [https://search.google.com/test/amp](https://search.google.com/test/amp)\n- [https://validator.ampproject.org/](https://validator.ampproject.org/)\n\nUntuk hasil test blog saya sendiri kalian bisa lihat di beberapa tautan berikut:\n\n- [Halaman Beranda](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp)\n- [Halaman Tentang](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout)\n- [Halaman Post Tanpa Gambar](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F)\n- [Halaman Post Dengan Gambar](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F)\n\n\n## Repositori hasil belajar\n\n[https://github.com/mazipan/blog-2.0 ↗️](https://github.com/mazipan/blog-2.0)\n\n### Demikian artikel kali ini, semoga bermanfaat...\n',html:'<h2>Sekilas Mengenai AMP</h2>\n<p>AMP (Accelerated Mobile Pages - <a href="https://amp.dev">amp.dev ↗️</a>) merupakan inisiatif yang diawali oleh Google dalam membantu para publisher, developer dan para pemilik website agar bisa menyediakan website dengan kecepatan muat yang sangat cepat bahkan mendekati instan untuk device mobile. Untuk mencapai titik muat instan ini tentu tidak didapatkan secara gratis, ini dilakukan dengan peraturan ketat yang diterapkan oleh AMP. Ekstremnya bisa disebut bahwa AMP bahkan tidak memperbolehkan untuk menyisipkan sembarang skrip JavaScript ke dalam halaman website kita, ditambah dengan berbagai aturan ketat lainnya yang bisa menjamin bahwa website dengan dukungan AMP yang valid bisa tetap dimuat dengan kecepatan yang luar biasa cepat.</p>\n<p>AMP merupakan rekomendasi yang dianjurkan oleh Google langsung karena memiliki prioritas yang baik bagi hasil pencarian Google Search. Dan dengan rampingnya teknologi di dalamnya serta ditambah bantuan <em>cache</em> dari Google membuat AMP menjadi sangat cepat diakses dan sangat baik untuk digunakan sebagai halaman pertama bagi pengunjung yang datang dari hasil Google Search ini.</p>\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png" alt="Mazipan AMP" height="200px" width="200px">\n<h2>Dasar-dasar Membuat AMP</h2>\n<p>Halaman AMP memang menjadi halaman yang terpisah dari halaman aslinya, ini dikarenakan terlalu banyak aturan ketat yang membuat teknologi website pada umumnya akan susah untuk membuat halaman AMP yang valid. Halaman AMP seperti ibarat halaman kopian dari halaman asli yang telah kita buat sebelumnya namun dengan memenuhi berbagai aturan yang telah ditetapkan oleh AMP.</p>\n<p>Untuk membuat halaman AMP pertama kita, pertama kita perlu menambahkan identifikasi pada tag <code>html</code> bahwa halaman tersebut merupakan versi AMP.</p>\n<p>Bila sebelumnya kita menulis html seperti berikut:</p>\n<pre><code class="language-html">&lt;html&gt;\n  &lt;head&gt;&lt;/head&gt;\n  &lt;body&gt;&lt;/body&gt;\n&lt;html&gt;\n</code></pre>\n<p>Maka di AMP kita akan menambahkan emoji ⚡ pada tag <code>html</code> seperti berikut:</p>\n<pre><code class="language-html">&lt;html ⚡&gt;\n  &lt;head&gt;&lt;/head&gt;\n  &lt;body&gt;&lt;/body&gt;\n&lt;html&gt;\n</code></pre>\n<p>Atau bila kita tidak senang menggunakan emoji bisa menggantinya dengan atribut <code>amp</code> tanpa perlu mengisi nilai apapun pada atribut tersebut.</p>\n<p>Setelahnya kita bisa menambahkan skrip utama untuk mendukung AMP dengan menambahkan kode berikut:</p>\n<pre><code class="language-html">&lt;script async src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>Serta menambahkan CSS wajib atau disebut <em>boilerplate</em> untuk halaman AMP berikut:</p>\n<pre><code class="language-html">&lt;style amp-boilerplate&gt;body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}&lt;/style&gt;&lt;noscript&gt;&lt;style amp-boilerplate&gt;body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}&lt;/style&gt;&lt;/noscript&gt;\n</code></pre>\n<p>Perlu diketahui bahwa kita tidak boleh menambahkan skrip JavaScript apapun selain yang sudah dibuatkan oleh AMP sendiri atau biasa dikenal dengan komponen AMP, jadi kita diharuskan untuk menghapus semua link untuk memuat berbagai JavaScript.</p>\n<p>Pun dengan CSS, tidak diperbolehkan bagi kita untuk memuat eksternal CSS sehingga harus menghapus semua link yang memuat CSS dari luar. Bila kita membutuhkan CSS tambahan, kita bisa menggunakan internal CSS dengan tag <code>style</code> dengan atribut wajib yakni <code>amp-custom</code> seperti contoh berikut:</p>\n<pre><code class="language-html">&lt;style amp-custom&gt;\n  .custom-class {}\n&lt;/style&gt;\n</code></pre>\n<p>Dalam menggunakan CSS pun ada hal yang perlu diperhatikan, seperti tidak bolehnya kita menggunakan <code>!important</code>.</p>\n<p>Pada dasarnya kita bebas menggunakan berbagai tag HTML pada halaman AMP kita, namun dengan aturan ketat AMP yang meyarankan untuk menggunakan komponen yang telah mereka buat untuk membangun berbagai hal umum, maka ada baiknya bila kita sempatkan untuk membaca halaman dokumen resmi dari AMP mengenai komponen apa saja yang telah disediakan dan bisa kita gunakan pada halaman AMP. Selengkapnya silakan baca di halaman <a href="https://amp.dev/documentation/components/?format=websites">komponen AMP ↗️</a>.</p>\n<h2>Membuat AMP di Nuxt.js</h2>\n<p>Awalnya merupakan hal yang sangat sulit untuk membangun halaman AMP yang valid dengan menggunakan framework yang berbasiskan JavaScript, ini dikarenakan AMP sendiri melarang penggunaan JavaScript yang justru pada framework tersebut telah menjadi sebuah tulang punggung dari website kita.</p>\n<p>Namun dengan perkembangan framework JavaScript akhir-akhir termasuk Nuxt.js di dalamnya, hal yang tadinya tidak terfikirkan untuk dikerjakan menjadi mungkin meskipun masih tergolong rumit tertutama bagi para pengembang web pendatang baru.</p>\n<p>Untuk blog saya sendiri memang dibangun diatas Nuxt.js yang memanfaatkan kemampuan untuk memproduksi file statis sehingga lebih mudah bagi saya untuk menyajikan website ini. Sayangnya file statis hasil buatan Nuxt.js masih mengandung eksternal JavaScript dan CSS yang sudah kita bahas bahwa hal ini dilarang dalam sebuah halaman AMP. Jadi hal berat yang akan kita kerjakan adalah melakukan pembersihan terhadap halaman AMP yang dihasilkan oleh Nuxt.js ini.</p>\n<p>Berikut langkah-langkah yang saya kerjakan untuk membuat halaman AMP untuk blog saya:</p>\n<h3>1. Membuat halaman baru</h3>\n<p>Karena halaman AMP merupakan kloningan halaman aslinya maka kita perlu membuat halaman baru yang kontennya mendekati konten aslinya. Saya membuat semua halaman AMP berada dibawah satu akar URL yang sama yakni <code>/amp/**</code> agar mudah bagi saya untuk mendeteksi mana halaman asli dan mana halaman AMP.</p>\n<h3>2. Hapus kode yang tidak diperlukan</h3>\n<p>Karena di AMP nantinya kita akan menghapus semua penggunaan Javascript, maka kode-kode di bawah <code>methods</code> pada halaman AMP yang mana kebanyakan merupakan fungsi-fungsi yang mendukung interaktitas sebuah halaman website menjadi tidak diperlukan lagi. Dan karena saya juga tidak suka memelihara kode yang tidak diperlukan lagi, maka menghapus adalah pilihan terbaik yang bisa dikerjakan.</p>\n<h3>3. Menambahkan hook saat generate</h3>\n<p>Saya memanfaatkan fungsi <code>generate</code> milik Nuxt untuk memproduksi file statis blog saya, karenanya saya perlu menambahkan hook pada saat Nuxt melakukan proses ini agar hasilnya bisa saya manipulasi nantinya.</p>\n<p>Untuk melakukan hal diatas saya perlu menambahkan kode berikut di berkas <code>nuxt.config.js</code>:</p>\n<pre><code class="language-javascript">module.exports = {\n  hooks: {\n    \'generate:page\': (page) =&gt; {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n      }\n    }\n  },\n}\n</code></pre>\n<p>Kode diatas membuat kita bisa menyelipkan sebuah proses ketika Nuxt melakukan proses <code>generate</code> dan saya menambahkan sebuah <em>RegEx</em> untuk mendeteksi hanya halaman AMP saja yang akan diselipkan proses tambahan sementara untuk halaman normal kita tidak memerlukan.</p>\n<h3>4. Memanipulasi HTML</h3>\n<p>Dari kode pada bagian sebelumnya kita mendapatkan objek <code>page</code> yang bila kita ambil property <code>page.html</code> adalah merupakan string HTML yang nantinya akan dijadikan file HTML sebagai keluaran akhir.</p>\n<p>Syukurnya saya menemukan artikel dari <a href="https://toor.co/blog/amp-pages-using-nuxt-js/">toor.co ↗️</a> yang dari situ kita bisa temukan dasar dari fungsi yang bisa memanipulasi HTML string agar mendukung AMP.</p>\n<p>Fungsinya kurang lebih seperti berikut:</p>\n<pre><code class="language-javascript">const ampScript = \'&lt;script async src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt;\'\nconst ampBoilerplate = \'&lt;style amp-boilerplate&gt;body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}&lt;/style&gt;&lt;noscript&gt;&lt;style amp-boilerplate&gt;body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}&lt;/style&gt;&lt;/noscript&gt;\'\n\nmodule.exports = (html) =&gt; {\n  // Add ⚡ to html tag\n  html = html.replace(/&lt;html/gi, \'&lt;html ⚡\')\n\n  // Combine css into single tag\n  let styleConcat = \'\'\n  html = html.replace(/&lt;style[^&gt;]*data-vue-ssr[^&gt;]*&gt;(.*?)?&lt;\\/style&gt;/gi, (match, sub) =&gt; {\n    styleConcat += sub\n    return \'\'\n  })\n  html = html.replace(\'&lt;/head&gt;\', `&lt;style amp-custom&gt;${styleConcat}&lt;/style&gt;&lt;/head&gt;`)\n\n  // Remove preload and prefetch tags\n  html = html.replace(/&lt;link[^&gt;]*rel=&quot;(?:preload|prefetch)?&quot;[^&gt;]*&gt;/gi, \'\')\n\n  // Remove amphtml tag\n  html = html.replace(/&lt;link[^&gt;]*rel=&quot;(?:amphtml)?&quot;[^&gt;]*&gt;/gi, \'\')\n\n  // Remove data attributes from tags\n  html = html.replace(/\\s*data-(?:[^=&gt;]*=&quot;[^&quot;]*&quot;|[^=&gt;\\s]*)/gi, \'\')\n\n  // Remove JS script tags except for ld+json\n  html = html.replace(/&lt;script\\b[^&lt;]*(?:(?!&lt;\\/script&gt;)&lt;[^&lt;]*)*&lt;\\/script&gt;/gi, (match) =&gt; {\n    return (/application\\/ld\\+json/gi.test(match)) ? match : \'\'\n  })\n\n  // Replace img tags with amp-img\n  html = html.replace(/&lt;img([^&gt;]*)&gt;/gi, (match, sub) =&gt; {\n    return `&lt;amp-img ${sub} layout=intrinsic&gt;&lt;/amp-img&gt;`\n  })\n\n  // Add AMP script before &lt;/head&gt;\n  html = html.replace(\'&lt;/head&gt;\', ampScript + ampBoilerplate + \'&lt;/head&gt;\')\n\n  return html\n}\n</code></pre>\n<p>Seperti kalian bisa baca di bagian komentar pada kode diatas, bahwa kode diatas melakukan berbagai proses penggantian karakter (<em>replace</em>) menggunakan <em>RegEx</em> seperti menambahkan emoji ⚡, menggabungkan semua CSS internal ke dalam satu tag <code>&lt;style amp-custom&gt;</code>, menghilangkan berbagai JavaScript eksternal, menambahkan skrip utama dan CSS boilerplate AMP serta berbagai hal lainnya.</p>\n<p>Fungsi ini saya letakan di direktory <code>plugins/ampify.js</code> yang kemudian dipanggil pada hook generate seperti berikut:</p>\n<pre><code class="language-javascript">const ampify = require(\'./plugins/ampify\')\n\nmodule.exports = {\n  hooks: {\n    \'generate:page\': (page) =&gt; {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n        page.html = ampify(page.html)\n      }\n    }\n  },\n}\n</code></pre>\n<h3>5. Mengganti semua penggunaan scoped style menjadi un-scoped</h3>\n<p>Karena saya termasuk cupu untuk bermain dengan <em>RegEx</em> maka mengutak-atik kode yang penuh dengan <em>RegEx</em> seperti diatas menjadi PR tersendiri.</p>\n<p>Walhasil ketika menyadari bahwa baris kode berikut ini:</p>\n<pre><code class="language-javascript">// Remove data attributes from tags\nhtml = html.replace(/\\s*data-(?:[^=&gt;]*=&quot;[^&quot;]*&quot;|[^=&gt;\\s]*)/gi, \'\')\n</code></pre>\n<p>Ternyata mengakibatkan semua kode CSS <em>scoped</em> saya menjadi berantakan, maka pilihan terbaik adalah memindahkan semua <em>scoped</em> CSS kedalam CSS biasa yang bersifat global. Tentu bukan hal yang mudah karena saya sudah terbiasa dimudahkan dengan kemampuan Vue yang bisa membuat <em>scoped</em> CSS dengan sangat mudah. Pilihan menggunakan global CSS berarti memaksa saya kembali menggunakan konvensi CSS yang tetap mengedepankan prinsip <em>scoped</em> ini seperti BEM CSS.</p>\n<p>Langkah ini tidak perlu teman-teman ikuti bila memang teman-teman bisa melakukan modifikasi <em>RegEx</em> agar bisa melakukan penggantian karakter dengan lebih tepat tanpa menimbulkan efek samping pada CSS.</p>\n<h3>6. Mengganti semua lazy load gambar</h3>\n<p>Pada halaman non-AMP, saya memanfaatkan pustaka <a href="https://github.com/mazipan/vue-tiny-lazyload-img">VueTinyLazyloadImg ↗️</a> untuk melakukan lazy load pada setiap gambar yang dimuat. Sayangnya proses ini dikerjakan oleh JavaScript. Pada AMP hal ini tidak diperlukan lagi karena mereka memiliki komponen <code>amp-img</code> yang sudah mendukung lazy load.</p>\n<p>Dengan menggunakan <code>amp-img</code> maka tag HTML saya untuk gambar menjadi tidak valid karena sebelumnya dengan pustaka yang saya gunakan diatas saya meletakan alamat gambar pada atribut <code>data-src</code> sementara pada atribut <code>src</code> hanya saya letakan gambar placeholder. Pilihan termudah adalah mengganti tag <code>data-src</code> menjadi tag <code>src</code> dan menghapus penempatan gambar placeholder pada atribut <code>src</code>.</p>\n<p>Proses diatas bisa kita letakkan pada fungsi sebelumnya yang kita gunakan untuk melakukan penggantian karakter pada HTML string. Sebagai catatan bahwa kita perlu meletakan proses ini sebeleum penghilangan berbagai atribut <code>data-**</code> yang ada di dalam fungsi tersebut karena kita akan kehilangan atribut <code>data-src</code> bila dilakukan setelahnya.</p>\n<p>Sementara untuk saat ini, saya memilih meletakan pada file .vue yang menjadi halaman AMP dimana disini dilakukan proses parsing konten <em>Markdown</em> menggunakan <code>frontmatter-markdown-loader</code>.</p>\n<p>Fungsi yang saya buat seperti berikut:</p>\n<pre><code class="language-javascript">function replaceLazyloadImg (str) {\n  return str &amp;&amp; str.replace(/&quot;src&quot;:(?:[^=&gt;][^&quot;]*&quot;,&quot;data-src&quot;|[^=&gt;&quot;]*)/gi, \'&quot;src&quot;\')\n}\n</code></pre>\n<h3>7. Menambahkan ukuran pada gambar</h3>\n<p>Ini pekerjaan yang sampai artikel ini dipublikasikan masih belum sempat saya selesaikan. Menambahkan atribut <code>height</code> dan <code>width</code> pada konten Markdown yang menyertakan gambar di dalamnya.</p>\n<h3>8. Menambahkan canonical</h3>\n<p>Kita perlu menautkan antara halaman AMP dengan halaman aslinya agar bisa dideteksi oleh Google bahwa halaman AMP tersebut merupakan representasi dari konten yang mana.</p>\n<p>Caranya adalah dengan menambahkan kode seperti berikut pada head halaman AMP:</p>\n<pre><code class="language-html">&lt;head&gt;\n  &lt;link rel=&quot;canonical&quot; href=&quot;alamat-halaman-asli&quot;&gt;&lt;/link&gt;\n&lt;/head&gt;\n</code></pre>\n<p>Dan kode berikut pada halaman aslinya:</p>\n<pre><code class="language-html">&lt;head&gt;\n  &lt;link rel=&quot;amphtml&quot; href=&quot;alamat-halaman-amp&quot;&gt;&lt;/link&gt;\n&lt;/head&gt;\n</code></pre>\n<p>Untuk membuat dua kode diatas kita bisa menambahkan pada bagian <code>head()</code> pada file .vue dari halaman kita, seperti contoh berikut pada halaman AMP:</p>\n<pre><code class="language-javascript">export default {\n  head () {\n    const url = `${this.productionUrl}/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'canonical\', rel: \'canonical\', href: url }\n      ]\n    }\n  }\n}\n</code></pre>\n<p>Dan berikut yang saya sematkan pada halaman aslinya:</p>\n<pre><code class="language-javascript">export default {\n  head () {\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'amphtml\', rel: \'amphtml\', href: ampUrl }\n      ]\n    }\n  }\n}\n</code></pre>\n<h3>9. Menambahkan Google Analytics</h3>\n<p>Untuk menambahkan Google Analytics pada halaman AMP memang sedikit berbeda dengan halaman biasa. Secara mudahnya, menambahkan Google Analytics bisa dilakukan dengan menambahkan skrip eksternal berikut:</p>\n<pre><code class="language-html">&lt;script async custom-element=&quot;amp-analytics&quot; src=&quot;https://cdn.ampproject.org/v0/amp-analytics-0.1.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>Serta menempatkan kode sederhana untuk melacak <em>page view</em> seperti berikut:</p>\n<pre><code class="language-html">&lt;amp-analytics type=\'googleanalytics\'&gt;\n  &lt;script type=\'application/json\'&gt;\n    {\n      &quot;vars&quot;: {\n        &quot;account&quot;: &quot;UA-12345678-X&quot;\n      },\n      &quot;triggers&quot;: {\n        &quot;trackPageview&quot;: {\n          &quot;on&quot;: &quot;visible&quot;,\n          &quot;request&quot;: &quot;pageview&quot;\n        }\n      }\n    }\n  &lt;/script&gt;\n&lt;/amp-analytics&gt;\n</code></pre>\n<p>Untuk projek kita, kita bisa menyisipkan kode ini pada skrip <code>ampify</code> kita dengan sedikit perubahan seperti berikut:</p>\n<pre><code class="language-javascript">const ampScript = `&lt;script async src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt;\n&lt;script async custom-element=&quot;amp-analytics&quot; src=&quot;https://cdn.ampproject.org/v0/amp-analytics-0.1.js&quot;&gt;&lt;/script&gt;`\n</code></pre>\n<p>Kode di atas digunakan untuk menyisipkan skrip analytics yang dibutuhkan. Dan berikutnya kita akan menyisipkan skrip tracking sebelum tag penutup <code>&lt;/body&gt;</code>, seperti contoh berikut:</p>\n<pre><code class="language-javascript">// Add AMP analytics\nhtml = html.replace(\'&lt;/body&gt;\',\n`&lt;amp-analytics type=\'googleanalytics\'&gt;\n    &lt;script type=\'application/json\'&gt;\n      {\n        &quot;vars&quot;: {\n          &quot;account&quot;: &quot;UA-12345678-X&quot;\n        },\n        &quot;triggers&quot;: {\n          &quot;trackPageview&quot;: {\n            &quot;on&quot;: &quot;visible&quot;,\n            &quot;request&quot;: &quot;pageview&quot;\n          }\n        }\n      }\n    &lt;/script&gt;\n  &lt;/amp-analytics&gt;\n&lt;/body&gt;`)\n</code></pre>\n<h2>Test Validasi Halaman AMP</h2>\n<p>Setelah proses selesai dan kalian sudah menghasilkan berkas statis yang mendukung AMP, jangan lupa untuk mengecek validasi dari halaman tersebut. Ada beberapa alternatif yang bisa kalian gunakan untuk melakukan test terhadap validasi AMP, diantaranya</p>\n<ul>\n<li><a href="https://search.google.com/test/amp">https://search.google.com/test/amp</a></li>\n<li><a href="https://validator.ampproject.org/">https://validator.ampproject.org/</a></li>\n</ul>\n<p>Untuk hasil test blog saya sendiri kalian bisa lihat di beberapa tautan berikut:</p>\n<ul>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp">Halaman Beranda</a></li>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout">Halaman Tentang</a></li>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F">Halaman Post Tanpa Gambar</a></li>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F">Halaman Post Dengan Gambar</a></li>\n</ul>\n<h2>Repositori hasil belajar</h2>\n<p><a href="https://github.com/mazipan/blog-2.0">https://github.com/mazipan/blog-2.0 ↗️</a></p>\n<h3>Demikian artikel kali ini, semoga bermanfaat...</h3>\n',attributes:{title:"Membuat AMP Pages dengan Nuxt.js",slug:"generate-amp-pages-in-nuxtjs",date:"2019-06-02",minute2read:20,description:"Menceritakan bagaimana cara membuat AMP Pages untuk blog kalian dengan framework Nuxt.js",categories:["javascript","nuxt","amp"],cover:"https://www.mazipan.xyz/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png",_meta:{resourcePath:"/home/travis/build/mazipan/blog-2.0/contents/published/generate-amp-pages-in-nuxtjs/index.md"}},vue:{render:'return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"content-markdown"},[_c(\'h2\',[_vm._v("Sekilas Mengenai AMP")]),_vm._v(" "),_vm._m(0),_vm._v(" "),_vm._m(1),_vm._v(" "),_c(\'img\',{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{"src":"/images/placeholder-1x1.png","data-src":"/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png","alt":"Mazipan AMP","height":"200px","width":"200px"}}),_vm._v(" "),_c(\'h2\',[_vm._v("Dasar-dasar Membuat AMP")]),_vm._v(" "),_c(\'p\',[_vm._v("Halaman AMP memang menjadi halaman yang terpisah dari halaman aslinya, ini dikarenakan terlalu banyak aturan ketat yang membuat teknologi website pada umumnya akan susah untuk membuat halaman AMP yang valid. Halaman AMP seperti ibarat halaman kopian dari halaman asli yang telah kita buat sebelumnya namun dengan memenuhi berbagai aturan yang telah ditetapkan oleh AMP.")]),_vm._v(" "),_vm._m(2),_vm._v(" "),_c(\'p\',[_vm._v("Bila sebelumnya kita menulis html seperti berikut:")]),_vm._v(" "),_vm._m(3),_vm._v(" "),_vm._m(4),_vm._v(" "),_vm._m(5),_vm._v(" "),_vm._m(6),_vm._v(" "),_c(\'p\',[_vm._v("Setelahnya kita bisa menambahkan skrip utama untuk mendukung AMP dengan menambahkan kode berikut:")]),_vm._v(" "),_vm._m(7),_vm._v(" "),_vm._m(8),_vm._v(" "),_vm._m(9),_vm._v(" "),_c(\'p\',[_vm._v("Perlu diketahui bahwa kita tidak boleh menambahkan skrip JavaScript apapun selain yang sudah dibuatkan oleh AMP sendiri atau biasa dikenal dengan komponen AMP, jadi kita diharuskan untuk menghapus semua link untuk memuat berbagai JavaScript.")]),_vm._v(" "),_vm._m(10),_vm._v(" "),_vm._m(11),_vm._v(" "),_vm._m(12),_vm._v(" "),_vm._m(13),_vm._v(" "),_c(\'h2\',[_vm._v("Membuat AMP di Nuxt.js")]),_vm._v(" "),_c(\'p\',[_vm._v("Awalnya merupakan hal yang sangat sulit untuk membangun halaman AMP yang valid dengan menggunakan framework yang berbasiskan JavaScript, ini dikarenakan AMP sendiri melarang penggunaan JavaScript yang justru pada framework tersebut telah menjadi sebuah tulang punggung dari website kita.")]),_vm._v(" "),_c(\'p\',[_vm._v("Namun dengan perkembangan framework JavaScript akhir-akhir termasuk Nuxt.js di dalamnya, hal yang tadinya tidak terfikirkan untuk dikerjakan menjadi mungkin meskipun masih tergolong rumit tertutama bagi para pengembang web pendatang baru.")]),_vm._v(" "),_c(\'p\',[_vm._v("Untuk blog saya sendiri memang dibangun diatas Nuxt.js yang memanfaatkan kemampuan untuk memproduksi file statis sehingga lebih mudah bagi saya untuk menyajikan website ini. Sayangnya file statis hasil buatan Nuxt.js masih mengandung eksternal JavaScript dan CSS yang sudah kita bahas bahwa hal ini dilarang dalam sebuah halaman AMP. Jadi hal berat yang akan kita kerjakan adalah melakukan pembersihan terhadap halaman AMP yang dihasilkan oleh Nuxt.js ini.")]),_vm._v(" "),_c(\'p\',[_vm._v("Berikut langkah-langkah yang saya kerjakan untuk membuat halaman AMP untuk blog saya:")]),_vm._v(" "),_c(\'h3\',[_vm._v("1. Membuat halaman baru")]),_vm._v(" "),_vm._m(14),_vm._v(" "),_c(\'h3\',[_vm._v("2. Hapus kode yang tidak diperlukan")]),_vm._v(" "),_vm._m(15),_vm._v(" "),_c(\'h3\',[_vm._v("3. Menambahkan hook saat generate")]),_vm._v(" "),_vm._m(16),_vm._v(" "),_vm._m(17),_vm._v(" "),_vm._m(18),_vm._v(" "),_vm._m(19),_vm._v(" "),_c(\'h3\',[_vm._v("4. Memanipulasi HTML")]),_vm._v(" "),_vm._m(20),_vm._v(" "),_vm._m(21),_vm._v(" "),_c(\'p\',[_vm._v("Fungsinya kurang lebih seperti berikut:")]),_vm._v(" "),_vm._m(22),_vm._v(" "),_vm._m(23),_vm._v(" "),_vm._m(24),_vm._v(" "),_vm._m(25),_vm._v(" "),_c(\'h3\',[_vm._v("5. Mengganti semua penggunaan scoped style menjadi un-scoped")]),_vm._v(" "),_vm._m(26),_vm._v(" "),_c(\'p\',[_vm._v("Walhasil ketika menyadari bahwa baris kode berikut ini:")]),_vm._v(" "),_vm._m(27),_vm._v(" "),_vm._m(28),_vm._v(" "),_vm._m(29),_vm._v(" "),_c(\'h3\',[_vm._v("6. Mengganti semua lazy load gambar")]),_vm._v(" "),_vm._m(30),_vm._v(" "),_vm._m(31),_vm._v(" "),_vm._m(32),_vm._v(" "),_vm._m(33),_vm._v(" "),_c(\'p\',[_vm._v("Fungsi yang saya buat seperti berikut:")]),_vm._v(" "),_vm._m(34),_vm._v(" "),_c(\'h3\',[_vm._v("7. Menambahkan ukuran pada gambar")]),_vm._v(" "),_vm._m(35),_vm._v(" "),_c(\'h3\',[_vm._v("8. Menambahkan canonical")]),_vm._v(" "),_c(\'p\',[_vm._v("Kita perlu menautkan antara halaman AMP dengan halaman aslinya agar bisa dideteksi oleh Google bahwa halaman AMP tersebut merupakan representasi dari konten yang mana.")]),_vm._v(" "),_c(\'p\',[_vm._v("Caranya adalah dengan menambahkan kode seperti berikut pada head halaman AMP:")]),_vm._v(" "),_vm._m(36),_vm._v(" "),_c(\'p\',[_vm._v("Dan kode berikut pada halaman aslinya:")]),_vm._v(" "),_vm._m(37),_vm._v(" "),_vm._m(38),_vm._v(" "),_vm._m(39),_vm._v(" "),_c(\'p\',[_vm._v("Dan berikut yang saya sematkan pada halaman aslinya:")]),_vm._v(" "),_vm._m(40),_vm._v(" "),_c(\'h3\',[_vm._v("9. Menambahkan Google Analytics")]),_vm._v(" "),_c(\'p\',[_vm._v("Untuk menambahkan Google Analytics pada halaman AMP memang sedikit berbeda dengan halaman biasa. Secara mudahnya, menambahkan Google Analytics bisa dilakukan dengan menambahkan skrip eksternal berikut:")]),_vm._v(" "),_vm._m(41),_vm._v(" "),_vm._m(42),_vm._v(" "),_vm._m(43),_vm._v(" "),_vm._m(44),_vm._v(" "),_vm._m(45),_vm._v(" "),_vm._m(46),_vm._v(" "),_vm._m(47),_vm._v(" "),_c(\'h2\',[_vm._v("Test Validasi Halaman AMP")]),_vm._v(" "),_c(\'p\',[_vm._v("Setelah proses selesai dan kalian sudah menghasilkan berkas statis yang mendukung AMP, jangan lupa untuk mengecek validasi dari halaman tersebut. Ada beberapa alternatif yang bisa kalian gunakan untuk melakukan test terhadap validasi AMP, diantaranya")]),_vm._v(" "),_vm._m(48),_vm._v(" "),_c(\'p\',[_vm._v("Untuk hasil test blog saya sendiri kalian bisa lihat di beberapa tautan berikut:")]),_vm._v(" "),_vm._m(49),_vm._v(" "),_c(\'h2\',[_vm._v("Repositori hasil belajar")]),_vm._v(" "),_vm._m(50),_vm._v(" "),_c(\'h3\',[_vm._v("Demikian artikel kali ini, semoga bermanfaat...")])]) }',staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("AMP (Accelerated Mobile Pages - "),_c(\'a\',{attrs:{"href":"https://amp.dev"}},[_vm._v("amp.dev ↗️")]),_vm._v(") merupakan inisiatif yang diawali oleh Google dalam membantu para publisher, developer dan para pemilik website agar bisa menyediakan website dengan kecepatan muat yang sangat cepat bahkan mendekati instan untuk device mobile. Untuk mencapai titik muat instan ini tentu tidak didapatkan secara gratis, ini dilakukan dengan peraturan ketat yang diterapkan oleh AMP. Ekstremnya bisa disebut bahwa AMP bahkan tidak memperbolehkan untuk menyisipkan sembarang skrip JavaScript ke dalam halaman website kita, ditambah dengan berbagai aturan ketat lainnya yang bisa menjamin bahwa website dengan dukungan AMP yang valid bisa tetap dimuat dengan kecepatan yang luar biasa cepat.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("AMP merupakan rekomendasi yang dianjurkan oleh Google langsung karena memiliki prioritas yang baik bagi hasil pencarian Google Search. Dan dengan rampingnya teknologi di dalamnya serta ditambah bantuan "),_c(\'em\',[_vm._v("cache")]),_vm._v(" dari Google membuat AMP menjadi sangat cepat diakses dan sangat baik untuk digunakan sebagai halaman pertama bagi pengunjung yang datang dari hasil Google Search ini.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Untuk membuat halaman AMP pertama kita, pertama kita perlu menambahkan identifikasi pada tag "),_c(\'code\',{pre:true},[_vm._v("html")]),_vm._v(" bahwa halaman tersebut merupakan versi AMP.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<html>\\n  <head></head>\\n  <body></body>\\n<html>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Maka di AMP kita akan menambahkan emoji ⚡ pada tag "),_c(\'code\',{pre:true},[_vm._v("html")]),_vm._v(" seperti berikut:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<html ⚡>\\n  <head></head>\\n  <body></body>\\n<html>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Atau bila kita tidak senang menggunakan emoji bisa menggantinya dengan atribut "),_c(\'code\',{pre:true},[_vm._v("amp")]),_vm._v(" tanpa perlu mengisi nilai apapun pada atribut tersebut.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<script async src=\\"https://cdn.ampproject.org/v0.js\\"><\/script>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Serta menambahkan CSS wajib atau disebut "),_c(\'em\',[_vm._v("boilerplate")]),_vm._v(" untuk halaman AMP berikut:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Pun dengan CSS, tidak diperbolehkan bagi kita untuk memuat eksternal CSS sehingga harus menghapus semua link yang memuat CSS dari luar. Bila kita membutuhkan CSS tambahan, kita bisa menggunakan internal CSS dengan tag "),_c(\'code\',{pre:true},[_vm._v("style")]),_vm._v(" dengan atribut wajib yakni "),_c(\'code\',{pre:true},[_vm._v("amp-custom")]),_vm._v(" seperti contoh berikut:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<style amp-custom>\\n  .custom-class {}\\n</style>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Dalam menggunakan CSS pun ada hal yang perlu diperhatikan, seperti tidak bolehnya kita menggunakan "),_c(\'code\',{pre:true},[_vm._v("!important")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Pada dasarnya kita bebas menggunakan berbagai tag HTML pada halaman AMP kita, namun dengan aturan ketat AMP yang meyarankan untuk menggunakan komponen yang telah mereka buat untuk membangun berbagai hal umum, maka ada baiknya bila kita sempatkan untuk membaca halaman dokumen resmi dari AMP mengenai komponen apa saja yang telah disediakan dan bisa kita gunakan pada halaman AMP. Selengkapnya silakan baca di halaman "),_c(\'a\',{attrs:{"href":"https://amp.dev/documentation/components/?format=websites"}},[_vm._v("komponen AMP ↗️")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Karena halaman AMP merupakan kloningan halaman aslinya maka kita perlu membuat halaman baru yang kontennya mendekati konten aslinya. Saya membuat semua halaman AMP berada dibawah satu akar URL yang sama yakni "),_c(\'code\',{pre:true},[_vm._v("/amp/**")]),_vm._v(" agar mudah bagi saya untuk mendeteksi mana halaman asli dan mana halaman AMP.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Karena di AMP nantinya kita akan menghapus semua penggunaan Javascript, maka kode-kode di bawah "),_c(\'code\',{pre:true},[_vm._v("methods")]),_vm._v(" pada halaman AMP yang mana kebanyakan merupakan fungsi-fungsi yang mendukung interaktitas sebuah halaman website menjadi tidak diperlukan lagi. Dan karena saya juga tidak suka memelihara kode yang tidak diperlukan lagi, maka menghapus adalah pilihan terbaik yang bisa dikerjakan.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Saya memanfaatkan fungsi "),_c(\'code\',{pre:true},[_vm._v("generate")]),_vm._v(" milik Nuxt untuk memproduksi file statis blog saya, karenanya saya perlu menambahkan hook pada saat Nuxt melakukan proses ini agar hasilnya bisa saya manipulasi nantinya.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Untuk melakukan hal diatas saya perlu menambahkan kode berikut di berkas "),_c(\'code\',{pre:true},[_vm._v("nuxt.config.js")]),_vm._v(":")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("module.exports = {\\n  hooks: {\\n    \'generate:page\': (page) => {\\n      if (/^\\\\/amp/gi.test(page.route)) {\\n        console.log(\'processing amp file: \', page.route)\\n      }\\n    }\\n  },\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Kode diatas membuat kita bisa menyelipkan sebuah proses ketika Nuxt melakukan proses "),_c(\'code\',{pre:true},[_vm._v("generate")]),_vm._v(" dan saya menambahkan sebuah "),_c(\'em\',[_vm._v("RegEx")]),_vm._v(" untuk mendeteksi hanya halaman AMP saja yang akan diselipkan proses tambahan sementara untuk halaman normal kita tidak memerlukan.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Dari kode pada bagian sebelumnya kita mendapatkan objek "),_c(\'code\',{pre:true},[_vm._v("page")]),_vm._v(" yang bila kita ambil property "),_c(\'code\',{pre:true},[_vm._v("page.html")]),_vm._v(" adalah merupakan string HTML yang nantinya akan dijadikan file HTML sebagai keluaran akhir.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Syukurnya saya menemukan artikel dari "),_c(\'a\',{attrs:{"href":"https://toor.co/blog/amp-pages-using-nuxt-js/"}},[_vm._v("toor.co ↗️")]),_vm._v(" yang dari situ kita bisa temukan dasar dari fungsi yang bisa memanipulasi HTML string agar mendukung AMP.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("const ampScript = \'<script async src=\\"https://cdn.ampproject.org/v0.js\\"><\/script>\'\\nconst ampBoilerplate = \'<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\'\\n\\nmodule.exports = (html) => {\\n  // Add ⚡ to html tag\\n  html = html.replace(/<html/gi, \'<html ⚡\')\\n\\n  // Combine css into single tag\\n  let styleConcat = \'\'\\n  html = html.replace(/<style[^>]*data-vue-ssr[^>]*>(.*?)?<\\\\/style>/gi, (match, sub) => {\\n    styleConcat += sub\\n    return \'\'\\n  })\\n  html = html.replace(\'</head>\', `<style amp-custom>${styleConcat}</style></head>`)\\n\\n  // Remove preload and prefetch tags\\n  html = html.replace(/<link[^>]*rel=\\"(?:preload|prefetch)?\\"[^>]*>/gi, \'\')\\n\\n  // Remove amphtml tag\\n  html = html.replace(/<link[^>]*rel=\\"(?:amphtml)?\\"[^>]*>/gi, \'\')\\n\\n  // Remove data attributes from tags\\n  html = html.replace(/\\\\s*data-(?:[^=>]*=\\"[^\\"]*\\"|[^=>\\\\s]*)/gi, \'\')\\n\\n  // Remove JS script tags except for ld+json\\n  html = html.replace(/<script\\\\b[^<]*(?:(?!<\\\\/script>)<[^<]*)*<\\\\/script>/gi, (match) => {\\n    return (/application\\\\/ld\\\\+json/gi.test(match)) ? match : \'\'\\n  })\\n\\n  // Replace img tags with amp-img\\n  html = html.replace(/<img([^>]*)>/gi, (match, sub) => {\\n    return `<amp-img ${sub} layout=intrinsic></amp-img>`\\n  })\\n\\n  // Add AMP script before </head>\\n  html = html.replace(\'</head>\', ampScript + ampBoilerplate + \'</head>\')\\n\\n  return html\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Seperti kalian bisa baca di bagian komentar pada kode diatas, bahwa kode diatas melakukan berbagai proses penggantian karakter ("),_c(\'em\',[_vm._v("replace")]),_vm._v(") menggunakan "),_c(\'em\',[_vm._v("RegEx")]),_vm._v(" seperti menambahkan emoji ⚡, menggabungkan semua CSS internal ke dalam satu tag "),_c(\'code\',{pre:true},[_vm._v("<style amp-custom>")]),_vm._v(", menghilangkan berbagai JavaScript eksternal, menambahkan skrip utama dan CSS boilerplate AMP serta berbagai hal lainnya.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Fungsi ini saya letakan di direktory "),_c(\'code\',{pre:true},[_vm._v("plugins/ampify.js")]),_vm._v(" yang kemudian dipanggil pada hook generate seperti berikut:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("const ampify = require(\'./plugins/ampify\')\\n\\nmodule.exports = {\\n  hooks: {\\n    \'generate:page\': (page) => {\\n      if (/^\\\\/amp/gi.test(page.route)) {\\n        console.log(\'processing amp file: \', page.route)\\n        page.html = ampify(page.html)\\n      }\\n    }\\n  },\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Karena saya termasuk cupu untuk bermain dengan "),_c(\'em\',[_vm._v("RegEx")]),_vm._v(" maka mengutak-atik kode yang penuh dengan "),_c(\'em\',[_vm._v("RegEx")]),_vm._v(" seperti diatas menjadi PR tersendiri.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("// Remove data attributes from tags\\nhtml = html.replace(/\\\\s*data-(?:[^=>]*=\\"[^\\"]*\\"|[^=>\\\\s]*)/gi, \'\')\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Ternyata mengakibatkan semua kode CSS "),_c(\'em\',[_vm._v("scoped")]),_vm._v(" saya menjadi berantakan, maka pilihan terbaik adalah memindahkan semua "),_c(\'em\',[_vm._v("scoped")]),_vm._v(" CSS kedalam CSS biasa yang bersifat global. Tentu bukan hal yang mudah karena saya sudah terbiasa dimudahkan dengan kemampuan Vue yang bisa membuat "),_c(\'em\',[_vm._v("scoped")]),_vm._v(" CSS dengan sangat mudah. Pilihan menggunakan global CSS berarti memaksa saya kembali menggunakan konvensi CSS yang tetap mengedepankan prinsip "),_c(\'em\',[_vm._v("scoped")]),_vm._v(" ini seperti BEM CSS.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Langkah ini tidak perlu teman-teman ikuti bila memang teman-teman bisa melakukan modifikasi "),_c(\'em\',[_vm._v("RegEx")]),_vm._v(" agar bisa melakukan penggantian karakter dengan lebih tepat tanpa menimbulkan efek samping pada CSS.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Pada halaman non-AMP, saya memanfaatkan pustaka "),_c(\'a\',{attrs:{"href":"https://github.com/mazipan/vue-tiny-lazyload-img"}},[_vm._v("VueTinyLazyloadImg ↗️")]),_vm._v(" untuk melakukan lazy load pada setiap gambar yang dimuat. Sayangnya proses ini dikerjakan oleh JavaScript. Pada AMP hal ini tidak diperlukan lagi karena mereka memiliki komponen "),_c(\'code\',{pre:true},[_vm._v("amp-img")]),_vm._v(" yang sudah mendukung lazy load.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Dengan menggunakan "),_c(\'code\',{pre:true},[_vm._v("amp-img")]),_vm._v(" maka tag HTML saya untuk gambar menjadi tidak valid karena sebelumnya dengan pustaka yang saya gunakan diatas saya meletakan alamat gambar pada atribut "),_c(\'code\',{pre:true},[_vm._v("data-src")]),_vm._v(" sementara pada atribut "),_c(\'code\',{pre:true},[_vm._v("src")]),_vm._v(" hanya saya letakan gambar placeholder. Pilihan termudah adalah mengganti tag "),_c(\'code\',{pre:true},[_vm._v("data-src")]),_vm._v(" menjadi tag "),_c(\'code\',{pre:true},[_vm._v("src")]),_vm._v(" dan menghapus penempatan gambar placeholder pada atribut "),_c(\'code\',{pre:true},[_vm._v("src")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Proses diatas bisa kita letakkan pada fungsi sebelumnya yang kita gunakan untuk melakukan penggantian karakter pada HTML string. Sebagai catatan bahwa kita perlu meletakan proses ini sebeleum penghilangan berbagai atribut "),_c(\'code\',{pre:true},[_vm._v("data-**")]),_vm._v(" yang ada di dalam fungsi tersebut karena kita akan kehilangan atribut "),_c(\'code\',{pre:true},[_vm._v("data-src")]),_vm._v(" bila dilakukan setelahnya.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Sementara untuk saat ini, saya memilih meletakan pada file .vue yang menjadi halaman AMP dimana disini dilakukan proses parsing konten "),_c(\'em\',[_vm._v("Markdown")]),_vm._v(" menggunakan "),_c(\'code\',{pre:true},[_vm._v("frontmatter-markdown-loader")]),_vm._v(".")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("function replaceLazyloadImg (str) {\\n  return str && str.replace(/\\"src\\":(?:[^=>][^\\"]*\\",\\"data-src\\"|[^=>\\"]*)/gi, \'\\"src\\"\')\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Ini pekerjaan yang sampai artikel ini dipublikasikan masih belum sempat saya selesaikan. Menambahkan atribut "),_c(\'code\',{pre:true},[_vm._v("height")]),_vm._v(" dan "),_c(\'code\',{pre:true},[_vm._v("width")]),_vm._v(" pada konten Markdown yang menyertakan gambar di dalamnya.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<head>\\n  <link rel=\\"canonical\\" href=\\"alamat-halaman-asli\\"></link>\\n</head>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<head>\\n  <link rel=\\"amphtml\\" href=\\"alamat-halaman-amp\\"></link>\\n</head>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Untuk membuat dua kode diatas kita bisa menambahkan pada bagian "),_c(\'code\',{pre:true},[_vm._v("head()")]),_vm._v(" pada file .vue dari halaman kita, seperti contoh berikut pada halaman AMP:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("export default {\\n  head () {\\n    const url = `${this.productionUrl}/${this.meta.slug}`\\n    return {\\n      link: [\\n        { hid: \'canonical\', rel: \'canonical\', href: url }\\n      ]\\n    }\\n  }\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("export default {\\n  head () {\\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\\n    return {\\n      link: [\\n        { hid: \'amphtml\', rel: \'amphtml\', href: ampUrl }\\n      ]\\n    }\\n  }\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<script async custom-element=\\"amp-analytics\\" src=\\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\\"><\/script>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Serta menempatkan kode sederhana untuk melacak "),_c(\'em\',[_vm._v("page view")]),_vm._v(" seperti berikut:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<amp-analytics type=\'googleanalytics\'>\\n  <script type=\'application/json\'>\\n    {\\n      \\"vars\\": {\\n        \\"account\\": \\"UA-12345678-X\\"\\n      },\\n      \\"triggers\\": {\\n        \\"trackPageview\\": {\\n          \\"on\\": \\"visible\\",\\n          \\"request\\": \\"pageview\\"\\n        }\\n      }\\n    }\\n  <\/script>\\n</amp-analytics>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Untuk projek kita, kita bisa menyisipkan kode ini pada skrip "),_c(\'code\',{pre:true},[_vm._v("ampify")]),_vm._v(" kita dengan sedikit perubahan seperti berikut:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("const ampScript = `<script async src=\\"https://cdn.ampproject.org/v0.js\\"><\/script>\\n<script async custom-element=\\"amp-analytics\\" src=\\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\\"><\/script>`\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Kode di atas digunakan untuk menyisipkan skrip analytics yang dibutuhkan. Dan berikutnya kita akan menyisipkan skrip tracking sebelum tag penutup "),_c(\'code\',{pre:true},[_vm._v("</body>")]),_vm._v(", seperti contoh berikut:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("// Add AMP analytics\\nhtml = html.replace(\'</body>\',\\n`<amp-analytics type=\'googleanalytics\'>\\n    <script type=\'application/json\'>\\n      {\\n        \\"vars\\": {\\n          \\"account\\": \\"UA-12345678-X\\"\\n        },\\n        \\"triggers\\": {\\n          \\"trackPageview\\": {\\n            \\"on\\": \\"visible\\",\\n            \\"request\\": \\"pageview\\"\\n          }\\n        }\\n      }\\n    <\/script>\\n  </amp-analytics>\\n</body>`)\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp"}},[_vm._v("https://search.google.com/test/amp")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://validator.ampproject.org/"}},[_vm._v("https://validator.ampproject.org/")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp"}},[_vm._v("Halaman Beranda")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout"}},[_vm._v("Halaman Tentang")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F"}},[_vm._v("Halaman Post Tanpa Gambar")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F"}},[_vm._v("Halaman Post Dengan Gambar")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'a\',{attrs:{"href":"https://github.com/mazipan/blog-2.0"}},[_vm._v("https://github.com/mazipan/blog-2.0 ↗️")])]) }]',component:{data:function(){return{templateRender:null}},render:function(n){return this.templateRender?this.templateRender():n("div","Rendering")},created:function(){this.templateRender=function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("div",{staticClass:"content-markdown"},[t("h2",[n._v("Sekilas Mengenai AMP")]),n._v(" "),n._m(0),n._v(" "),n._m(1),n._v(" "),t("img",{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{src:"/images/placeholder-1x1.png","data-src":"/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png",alt:"Mazipan AMP",height:"200px",width:"200px"}}),n._v(" "),t("h2",[n._v("Dasar-dasar Membuat AMP")]),n._v(" "),t("p",[n._v("Halaman AMP memang menjadi halaman yang terpisah dari halaman aslinya, ini dikarenakan terlalu banyak aturan ketat yang membuat teknologi website pada umumnya akan susah untuk membuat halaman AMP yang valid. Halaman AMP seperti ibarat halaman kopian dari halaman asli yang telah kita buat sebelumnya namun dengan memenuhi berbagai aturan yang telah ditetapkan oleh AMP.")]),n._v(" "),n._m(2),n._v(" "),t("p",[n._v("Bila sebelumnya kita menulis html seperti berikut:")]),n._v(" "),n._m(3),n._v(" "),n._m(4),n._v(" "),n._m(5),n._v(" "),n._m(6),n._v(" "),t("p",[n._v("Setelahnya kita bisa menambahkan skrip utama untuk mendukung AMP dengan menambahkan kode berikut:")]),n._v(" "),n._m(7),n._v(" "),n._m(8),n._v(" "),n._m(9),n._v(" "),t("p",[n._v("Perlu diketahui bahwa kita tidak boleh menambahkan skrip JavaScript apapun selain yang sudah dibuatkan oleh AMP sendiri atau biasa dikenal dengan komponen AMP, jadi kita diharuskan untuk menghapus semua link untuk memuat berbagai JavaScript.")]),n._v(" "),n._m(10),n._v(" "),n._m(11),n._v(" "),n._m(12),n._v(" "),n._m(13),n._v(" "),t("h2",[n._v("Membuat AMP di Nuxt.js")]),n._v(" "),t("p",[n._v("Awalnya merupakan hal yang sangat sulit untuk membangun halaman AMP yang valid dengan menggunakan framework yang berbasiskan JavaScript, ini dikarenakan AMP sendiri melarang penggunaan JavaScript yang justru pada framework tersebut telah menjadi sebuah tulang punggung dari website kita.")]),n._v(" "),t("p",[n._v("Namun dengan perkembangan framework JavaScript akhir-akhir termasuk Nuxt.js di dalamnya, hal yang tadinya tidak terfikirkan untuk dikerjakan menjadi mungkin meskipun masih tergolong rumit tertutama bagi para pengembang web pendatang baru.")]),n._v(" "),t("p",[n._v("Untuk blog saya sendiri memang dibangun diatas Nuxt.js yang memanfaatkan kemampuan untuk memproduksi file statis sehingga lebih mudah bagi saya untuk menyajikan website ini. Sayangnya file statis hasil buatan Nuxt.js masih mengandung eksternal JavaScript dan CSS yang sudah kita bahas bahwa hal ini dilarang dalam sebuah halaman AMP. Jadi hal berat yang akan kita kerjakan adalah melakukan pembersihan terhadap halaman AMP yang dihasilkan oleh Nuxt.js ini.")]),n._v(" "),t("p",[n._v("Berikut langkah-langkah yang saya kerjakan untuk membuat halaman AMP untuk blog saya:")]),n._v(" "),t("h3",[n._v("1. Membuat halaman baru")]),n._v(" "),n._m(14),n._v(" "),t("h3",[n._v("2. Hapus kode yang tidak diperlukan")]),n._v(" "),n._m(15),n._v(" "),t("h3",[n._v("3. Menambahkan hook saat generate")]),n._v(" "),n._m(16),n._v(" "),n._m(17),n._v(" "),n._m(18),n._v(" "),n._m(19),n._v(" "),t("h3",[n._v("4. Memanipulasi HTML")]),n._v(" "),n._m(20),n._v(" "),n._m(21),n._v(" "),t("p",[n._v("Fungsinya kurang lebih seperti berikut:")]),n._v(" "),n._m(22),n._v(" "),n._m(23),n._v(" "),n._m(24),n._v(" "),n._m(25),n._v(" "),t("h3",[n._v("5. Mengganti semua penggunaan scoped style menjadi un-scoped")]),n._v(" "),n._m(26),n._v(" "),t("p",[n._v("Walhasil ketika menyadari bahwa baris kode berikut ini:")]),n._v(" "),n._m(27),n._v(" "),n._m(28),n._v(" "),n._m(29),n._v(" "),t("h3",[n._v("6. Mengganti semua lazy load gambar")]),n._v(" "),n._m(30),n._v(" "),n._m(31),n._v(" "),n._m(32),n._v(" "),n._m(33),n._v(" "),t("p",[n._v("Fungsi yang saya buat seperti berikut:")]),n._v(" "),n._m(34),n._v(" "),t("h3",[n._v("7. Menambahkan ukuran pada gambar")]),n._v(" "),n._m(35),n._v(" "),t("h3",[n._v("8. Menambahkan canonical")]),n._v(" "),t("p",[n._v("Kita perlu menautkan antara halaman AMP dengan halaman aslinya agar bisa dideteksi oleh Google bahwa halaman AMP tersebut merupakan representasi dari konten yang mana.")]),n._v(" "),t("p",[n._v("Caranya adalah dengan menambahkan kode seperti berikut pada head halaman AMP:")]),n._v(" "),n._m(36),n._v(" "),t("p",[n._v("Dan kode berikut pada halaman aslinya:")]),n._v(" "),n._m(37),n._v(" "),n._m(38),n._v(" "),n._m(39),n._v(" "),t("p",[n._v("Dan berikut yang saya sematkan pada halaman aslinya:")]),n._v(" "),n._m(40),n._v(" "),t("h3",[n._v("9. Menambahkan Google Analytics")]),n._v(" "),t("p",[n._v("Untuk menambahkan Google Analytics pada halaman AMP memang sedikit berbeda dengan halaman biasa. Secara mudahnya, menambahkan Google Analytics bisa dilakukan dengan menambahkan skrip eksternal berikut:")]),n._v(" "),n._m(41),n._v(" "),n._m(42),n._v(" "),n._m(43),n._v(" "),n._m(44),n._v(" "),n._m(45),n._v(" "),n._m(46),n._v(" "),n._m(47),n._v(" "),t("h2",[n._v("Test Validasi Halaman AMP")]),n._v(" "),t("p",[n._v("Setelah proses selesai dan kalian sudah menghasilkan berkas statis yang mendukung AMP, jangan lupa untuk mengecek validasi dari halaman tersebut. Ada beberapa alternatif yang bisa kalian gunakan untuk melakukan test terhadap validasi AMP, diantaranya")]),n._v(" "),n._m(48),n._v(" "),t("p",[n._v("Untuk hasil test blog saya sendiri kalian bisa lihat di beberapa tautan berikut:")]),n._v(" "),n._m(49),n._v(" "),t("h2",[n._v("Repositori hasil belajar")]),n._v(" "),n._m(50),n._v(" "),t("h3",[n._v("Demikian artikel kali ini, semoga bermanfaat...")])])},this.$options.staticRenderFns=[function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("AMP (Accelerated Mobile Pages - "),e("a",{attrs:{href:"https://amp.dev"}},[this._v("amp.dev ↗️")]),this._v(") merupakan inisiatif yang diawali oleh Google dalam membantu para publisher, developer dan para pemilik website agar bisa menyediakan website dengan kecepatan muat yang sangat cepat bahkan mendekati instan untuk device mobile. Untuk mencapai titik muat instan ini tentu tidak didapatkan secara gratis, ini dilakukan dengan peraturan ketat yang diterapkan oleh AMP. Ekstremnya bisa disebut bahwa AMP bahkan tidak memperbolehkan untuk menyisipkan sembarang skrip JavaScript ke dalam halaman website kita, ditambah dengan berbagai aturan ketat lainnya yang bisa menjamin bahwa website dengan dukungan AMP yang valid bisa tetap dimuat dengan kecepatan yang luar biasa cepat.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("AMP merupakan rekomendasi yang dianjurkan oleh Google langsung karena memiliki prioritas yang baik bagi hasil pencarian Google Search. Dan dengan rampingnya teknologi di dalamnya serta ditambah bantuan "),e("em",[this._v("cache")]),this._v(" dari Google membuat AMP menjadi sangat cepat diakses dan sangat baik untuk digunakan sebagai halaman pertama bagi pengunjung yang datang dari hasil Google Search ini.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Untuk membuat halaman AMP pertama kita, pertama kita perlu menambahkan identifikasi pada tag "),e("code",{pre:!0},[this._v("html")]),this._v(" bahwa halaman tersebut merupakan versi AMP.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<html>\n  <head></head>\n  <body></body>\n<html>\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Maka di AMP kita akan menambahkan emoji ⚡ pada tag "),e("code",{pre:!0},[this._v("html")]),this._v(" seperti berikut:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<html ⚡>\n  <head></head>\n  <body></body>\n<html>\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Atau bila kita tidak senang menggunakan emoji bisa menggantinya dengan atribut "),e("code",{pre:!0},[this._v("amp")]),this._v(" tanpa perlu mengisi nilai apapun pada atribut tersebut.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Serta menambahkan CSS wajib atau disebut "),e("em",[this._v("boilerplate")]),this._v(" untuk halaman AMP berikut:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Pun dengan CSS, tidak diperbolehkan bagi kita untuk memuat eksternal CSS sehingga harus menghapus semua link yang memuat CSS dari luar. Bila kita membutuhkan CSS tambahan, kita bisa menggunakan internal CSS dengan tag "),e("code",{pre:!0},[this._v("style")]),this._v(" dengan atribut wajib yakni "),e("code",{pre:!0},[this._v("amp-custom")]),this._v(" seperti contoh berikut:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<style amp-custom>\n  .custom-class {}\n</style>\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Dalam menggunakan CSS pun ada hal yang perlu diperhatikan, seperti tidak bolehnya kita menggunakan "),e("code",{pre:!0},[this._v("!important")]),this._v(".")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Pada dasarnya kita bebas menggunakan berbagai tag HTML pada halaman AMP kita, namun dengan aturan ketat AMP yang meyarankan untuk menggunakan komponen yang telah mereka buat untuk membangun berbagai hal umum, maka ada baiknya bila kita sempatkan untuk membaca halaman dokumen resmi dari AMP mengenai komponen apa saja yang telah disediakan dan bisa kita gunakan pada halaman AMP. Selengkapnya silakan baca di halaman "),e("a",{attrs:{href:"https://amp.dev/documentation/components/?format=websites"}},[this._v("komponen AMP ↗️")]),this._v(".")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Karena halaman AMP merupakan kloningan halaman aslinya maka kita perlu membuat halaman baru yang kontennya mendekati konten aslinya. Saya membuat semua halaman AMP berada dibawah satu akar URL yang sama yakni "),e("code",{pre:!0},[this._v("/amp/**")]),this._v(" agar mudah bagi saya untuk mendeteksi mana halaman asli dan mana halaman AMP.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Karena di AMP nantinya kita akan menghapus semua penggunaan Javascript, maka kode-kode di bawah "),e("code",{pre:!0},[this._v("methods")]),this._v(" pada halaman AMP yang mana kebanyakan merupakan fungsi-fungsi yang mendukung interaktitas sebuah halaman website menjadi tidak diperlukan lagi. Dan karena saya juga tidak suka memelihara kode yang tidak diperlukan lagi, maka menghapus adalah pilihan terbaik yang bisa dikerjakan.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Saya memanfaatkan fungsi "),e("code",{pre:!0},[this._v("generate")]),this._v(" milik Nuxt untuk memproduksi file statis blog saya, karenanya saya perlu menambahkan hook pada saat Nuxt melakukan proses ini agar hasilnya bisa saya manipulasi nantinya.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Untuk melakukan hal diatas saya perlu menambahkan kode berikut di berkas "),e("code",{pre:!0},[this._v("nuxt.config.js")]),this._v(":")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("module.exports = {\n  hooks: {\n    'generate:page': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log('processing amp file: ', page.route)\n      }\n    }\n  },\n}\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Kode diatas membuat kita bisa menyelipkan sebuah proses ketika Nuxt melakukan proses "),e("code",{pre:!0},[this._v("generate")]),this._v(" dan saya menambahkan sebuah "),e("em",[this._v("RegEx")]),this._v(" untuk mendeteksi hanya halaman AMP saja yang akan diselipkan proses tambahan sementara untuk halaman normal kita tidak memerlukan.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Dari kode pada bagian sebelumnya kita mendapatkan objek "),e("code",{pre:!0},[this._v("page")]),this._v(" yang bila kita ambil property "),e("code",{pre:!0},[this._v("page.html")]),this._v(" adalah merupakan string HTML yang nantinya akan dijadikan file HTML sebagai keluaran akhir.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Syukurnya saya menemukan artikel dari "),e("a",{attrs:{href:"https://toor.co/blog/amp-pages-using-nuxt-js/"}},[this._v("toor.co ↗️")]),this._v(" yang dari situ kita bisa temukan dasar dari fungsi yang bisa memanipulasi HTML string agar mendukung AMP.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("const ampScript = '<script async src=\"https://cdn.ampproject.org/v0.js\"><\/script>'\nconst ampBoilerplate = '<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>'\n\nmodule.exports = (html) => {\n  // Add ⚡ to html tag\n  html = html.replace(/<html/gi, '<html ⚡')\n\n  // Combine css into single tag\n  let styleConcat = ''\n  html = html.replace(/<style[^>]*data-vue-ssr[^>]*>(.*?)?<\\/style>/gi, (match, sub) => {\n    styleConcat += sub\n    return ''\n  })\n  html = html.replace('</head>', `<style amp-custom>${styleConcat}</style></head>`)\n\n  // Remove preload and prefetch tags\n  html = html.replace(/<link[^>]*rel=\"(?:preload|prefetch)?\"[^>]*>/gi, '')\n\n  // Remove amphtml tag\n  html = html.replace(/<link[^>]*rel=\"(?:amphtml)?\"[^>]*>/gi, '')\n\n  // Remove data attributes from tags\n  html = html.replace(/\\s*data-(?:[^=>]*=\"[^\"]*\"|[^=>\\s]*)/gi, '')\n\n  // Remove JS script tags except for ld+json\n  html = html.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, (match) => {\n    return (/application\\/ld\\+json/gi.test(match)) ? match : ''\n  })\n\n  // Replace img tags with amp-img\n  html = html.replace(/<img([^>]*)>/gi, (match, sub) => {\n    return `<amp-img ${sub} layout=intrinsic></amp-img>`\n  })\n\n  // Add AMP script before </head>\n  html = html.replace('</head>', ampScript + ampBoilerplate + '</head>')\n\n  return html\n}\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Seperti kalian bisa baca di bagian komentar pada kode diatas, bahwa kode diatas melakukan berbagai proses penggantian karakter ("),e("em",[this._v("replace")]),this._v(") menggunakan "),e("em",[this._v("RegEx")]),this._v(" seperti menambahkan emoji ⚡, menggabungkan semua CSS internal ke dalam satu tag "),e("code",{pre:!0},[this._v("<style amp-custom>")]),this._v(", menghilangkan berbagai JavaScript eksternal, menambahkan skrip utama dan CSS boilerplate AMP serta berbagai hal lainnya.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Fungsi ini saya letakan di direktory "),e("code",{pre:!0},[this._v("plugins/ampify.js")]),this._v(" yang kemudian dipanggil pada hook generate seperti berikut:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("const ampify = require('./plugins/ampify')\n\nmodule.exports = {\n  hooks: {\n    'generate:page': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log('processing amp file: ', page.route)\n        page.html = ampify(page.html)\n      }\n    }\n  },\n}\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Karena saya termasuk cupu untuk bermain dengan "),e("em",[this._v("RegEx")]),this._v(" maka mengutak-atik kode yang penuh dengan "),e("em",[this._v("RegEx")]),this._v(" seperti diatas menjadi PR tersendiri.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('// Remove data attributes from tags\nhtml = html.replace(/\\s*data-(?:[^=>]*="[^"]*"|[^=>\\s]*)/gi, \'\')\n')])])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("p",[n._v("Ternyata mengakibatkan semua kode CSS "),t("em",[n._v("scoped")]),n._v(" saya menjadi berantakan, maka pilihan terbaik adalah memindahkan semua "),t("em",[n._v("scoped")]),n._v(" CSS kedalam CSS biasa yang bersifat global. Tentu bukan hal yang mudah karena saya sudah terbiasa dimudahkan dengan kemampuan Vue yang bisa membuat "),t("em",[n._v("scoped")]),n._v(" CSS dengan sangat mudah. Pilihan menggunakan global CSS berarti memaksa saya kembali menggunakan konvensi CSS yang tetap mengedepankan prinsip "),t("em",[n._v("scoped")]),n._v(" ini seperti BEM CSS.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Langkah ini tidak perlu teman-teman ikuti bila memang teman-teman bisa melakukan modifikasi "),e("em",[this._v("RegEx")]),this._v(" agar bisa melakukan penggantian karakter dengan lebih tepat tanpa menimbulkan efek samping pada CSS.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Pada halaman non-AMP, saya memanfaatkan pustaka "),e("a",{attrs:{href:"https://github.com/mazipan/vue-tiny-lazyload-img"}},[this._v("VueTinyLazyloadImg ↗️")]),this._v(" untuk melakukan lazy load pada setiap gambar yang dimuat. Sayangnya proses ini dikerjakan oleh JavaScript. Pada AMP hal ini tidak diperlukan lagi karena mereka memiliki komponen "),e("code",{pre:!0},[this._v("amp-img")]),this._v(" yang sudah mendukung lazy load.")])},function(){var n=this,e=n.$createElement,t=n._self._c||e;return t("p",[n._v("Dengan menggunakan "),t("code",{pre:!0},[n._v("amp-img")]),n._v(" maka tag HTML saya untuk gambar menjadi tidak valid karena sebelumnya dengan pustaka yang saya gunakan diatas saya meletakan alamat gambar pada atribut "),t("code",{pre:!0},[n._v("data-src")]),n._v(" sementara pada atribut "),t("code",{pre:!0},[n._v("src")]),n._v(" hanya saya letakan gambar placeholder. Pilihan termudah adalah mengganti tag "),t("code",{pre:!0},[n._v("data-src")]),n._v(" menjadi tag "),t("code",{pre:!0},[n._v("src")]),n._v(" dan menghapus penempatan gambar placeholder pada atribut "),t("code",{pre:!0},[n._v("src")]),n._v(".")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Proses diatas bisa kita letakkan pada fungsi sebelumnya yang kita gunakan untuk melakukan penggantian karakter pada HTML string. Sebagai catatan bahwa kita perlu meletakan proses ini sebeleum penghilangan berbagai atribut "),e("code",{pre:!0},[this._v("data-**")]),this._v(" yang ada di dalam fungsi tersebut karena kita akan kehilangan atribut "),e("code",{pre:!0},[this._v("data-src")]),this._v(" bila dilakukan setelahnya.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Sementara untuk saat ini, saya memilih meletakan pada file .vue yang menjadi halaman AMP dimana disini dilakukan proses parsing konten "),e("em",[this._v("Markdown")]),this._v(" menggunakan "),e("code",{pre:!0},[this._v("frontmatter-markdown-loader")]),this._v(".")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('function replaceLazyloadImg (str) {\n  return str && str.replace(/"src":(?:[^=>][^"]*","data-src"|[^=>"]*)/gi, \'"src"\')\n}\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Ini pekerjaan yang sampai artikel ini dipublikasikan masih belum sempat saya selesaikan. Menambahkan atribut "),e("code",{pre:!0},[this._v("height")]),this._v(" dan "),e("code",{pre:!0},[this._v("width")]),this._v(" pada konten Markdown yang menyertakan gambar di dalamnya.")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<head>\n  <link rel="canonical" href="alamat-halaman-asli"></link>\n</head>\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<head>\n  <link rel="amphtml" href="alamat-halaman-amp"></link>\n</head>\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Untuk membuat dua kode diatas kita bisa menambahkan pada bagian "),e("code",{pre:!0},[this._v("head()")]),this._v(" pada file .vue dari halaman kita, seperti contoh berikut pada halaman AMP:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("export default {\n  head () {\n    const url = `${this.productionUrl}/${this.meta.slug}`\n    return {\n      link: [\n        { hid: 'canonical', rel: 'canonical', href: url }\n      ]\n    }\n  }\n}\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("export default {\n  head () {\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\n    return {\n      link: [\n        { hid: 'amphtml', rel: 'amphtml', href: ampUrl }\n      ]\n    }\n  }\n}\n")])])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Serta menempatkan kode sederhana untuk melacak "),e("em",[this._v("page view")]),this._v(" seperti berikut:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<amp-analytics type=\'googleanalytics\'>\n  <script type=\'application/json\'>\n    {\n      "vars": {\n        "account": "UA-12345678-X"\n      },\n      "triggers": {\n        "trackPageview": {\n          "on": "visible",\n          "request": "pageview"\n        }\n      }\n    }\n  <\/script>\n</amp-analytics>\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Untuk projek kita, kita bisa menyisipkan kode ini pada skrip "),e("code",{pre:!0},[this._v("ampify")]),this._v(" kita dengan sedikit perubahan seperti berikut:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('const ampScript = `<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>`\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[this._v("Kode di atas digunakan untuk menyisipkan skrip analytics yang dibutuhkan. Dan berikutnya kita akan menyisipkan skrip tracking sebelum tag penutup "),e("code",{pre:!0},[this._v("</body>")]),this._v(", seperti contoh berikut:")])},function(){var n=this.$createElement,e=this._self._c||n;return e("pre",[e("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('// Add AMP analytics\nhtml = html.replace(\'</body>\',\n`<amp-analytics type=\'googleanalytics\'>\n    <script type=\'application/json\'>\n      {\n        "vars": {\n          "account": "UA-12345678-X"\n        },\n        "triggers": {\n          "trackPageview": {\n            "on": "visible",\n            "request": "pageview"\n          }\n        }\n      }\n    <\/script>\n  </amp-analytics>\n</body>`)\n')])])},function(){var n=this.$createElement,e=this._self._c||n;return e("ul",[e("li",[e("a",{attrs:{href:"https://search.google.com/test/amp"}},[this._v("https://search.google.com/test/amp")])]),this._v(" "),e("li",[e("a",{attrs:{href:"https://validator.ampproject.org/"}},[this._v("https://validator.ampproject.org/")])])])},function(){var n=this.$createElement,e=this._self._c||n;return e("ul",[e("li",[e("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp"}},[this._v("Halaman Beranda")])]),this._v(" "),e("li",[e("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout"}},[this._v("Halaman Tentang")])]),this._v(" "),e("li",[e("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F"}},[this._v("Halaman Post Tanpa Gambar")])]),this._v(" "),e("li",[e("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F"}},[this._v("Halaman Post Dengan Gambar")])])])},function(){var n=this.$createElement,e=this._self._c||n;return e("p",[e("a",{attrs:{href:"https://github.com/mazipan/blog-2.0"}},[this._v("https://github.com/mazipan/blog-2.0 ↗️")])])}]}}}}}}]);