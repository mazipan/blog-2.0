(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{213:function(e,t){e.exports={body:'## Disclaimer\n\nBefore we starting, you need to take a note that all in this article is my own words. It may be wrong, subjective and doesn\'t works well with your current situtations. Do not take any decisions based on only this article.\n\n## About Micro Frontend\n\nYou might ever heard the term of *Micro Frontends* (MFE), basically its just copycat from the concept of *Micro Services* in backend area. Like *Micro Services* that got very huge popularity in backend, MFE is also got good tractions in its adoptions. Every startup, every FE developers want to implementing this concept into their current projects.\n\n## What\'s the MFE sells to Us?\n\nMFE coming with many strong point that makes you as a developers interest in it. We will try to describe some of it in this below lists:\n\n#### Technology stack isolation\n\nMFE enable possibility to use different technology stack in Frontend. Let\'s say you want to develop header fragment using React, then you switch to Vue when developing the sidebar fragment. It possible with the isolation concept brings by MFE.\n\n#### Autonomous teams\n\nThis is maybe the coolest thing in MFE, you can have seperate teams which normally composed by different specialized person, like you can have one frontend developer, one backend developer, one designer, one product manager, etc in one team. They all can work without having worry their improvement or fixing will crashing another team improvement. It because they will only working in small piece of fragment that treats as a single web apps instead of one full pages.\n\nThis approach somehow can increase the effectiveness and efficiency of teams working on frontend code, and the teams entirely. They will have a full ownership on their own fragments, they can iterate faster in development. Instead of organizing the team based on their specialization, we can organizing based on bussiness scope or we usually called as a "vertical" alignment.\n\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/you-might-not-need-microfe/horizontal.png" alt="Micro FE horizontal teams" height="200px" width="200px">\n\n<small class="caption">Image source from https://martinfowler.com<small>\n\n#### Ease of deployments with better isolation\n\nThe other key point from MFE is that you can deploy your code with more confident without scare you will break feature or code from the another teams. This is because MFE often coming from different repository with different deployment pipeline and different server to serve the code in production environment.\n\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/you-might-not-need-microfe/deployment.png" alt="Micro FE deployment" height="200px" width="200px">\n\n<small class="caption">Image source from https://martinfowler.com<small>\n\n#### Improved scalability with smaller pieces\n\nWith different deployment and different server, its easier to us to maintain the scalability. Instead of have one big server, we can split it into several small server that only serve small piece of fragment. It also make us have a clear visibility about the fragment that have a bigger usage, and the smaller one. We can reduce the specs for the smaller one and increase for the bigger one.\n\n#### Localized complexity\n\nMFE can localized the complexity of your web apps into several part. This is good that we doesn\'t need to put all of our logics and complexities in the same place. With the growing of your bussiness, these logics and complexities may will harm you someday if its on one place.\n\n## Problem you will face\n\nHonestly, implementing MFE is not that easy. There are some concern you might face when try to adopt.\n\n## References:\n\n+ [micro-frontends.org](https://micro-frontends.org/)\n+ [martinfowler.com](https://martinfowler.com/articles/micro-frontends.html)\n\n### May useful for you...\n',html:'<h2>Disclaimer</h2>\n<p>Before we starting, you need to take a note that all in this article is my own words. It may be wrong, subjective and doesn\'t works well with your current situtations. Do not take any decisions based on only this article.</p>\n<h2>About Micro Frontend</h2>\n<p>You might ever heard the term of <em>Micro Frontends</em> (MFE), basically its just copycat from the concept of <em>Micro Services</em> in backend area. Like <em>Micro Services</em> that got very huge popularity in backend, MFE is also got good tractions in its adoptions. Every startup, every FE developers want to implementing this concept into their current projects.</p>\n<h2>What\'s the MFE sells to Us?</h2>\n<p>MFE coming with many strong point that makes you as a developers interest in it. We will try to describe some of it in this below lists:</p>\n<h4>Technology stack isolation</h4>\n<p>MFE enable possibility to use different technology stack in Frontend. Let\'s say you want to develop header fragment using React, then you switch to Vue when developing the sidebar fragment. It possible with the isolation concept brings by MFE.</p>\n<h4>Autonomous teams</h4>\n<p>This is maybe the coolest thing in MFE, you can have seperate teams which normally composed by different specialized person, like you can have one frontend developer, one backend developer, one designer, one product manager, etc in one team. They all can work without having worry their improvement or fixing will crashing another team improvement. It because they will only working in small piece of fragment that treats as a single web apps instead of one full pages.</p>\n<p>This approach somehow can increase the effectiveness and efficiency of teams working on frontend code, and the teams entirely. They will have a full ownership on their own fragments, they can iterate faster in development. Instead of organizing the team based on their specialization, we can organizing based on bussiness scope or we usually called as a &quot;vertical&quot; alignment.</p>\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/you-might-not-need-microfe/horizontal.png" alt="Micro FE horizontal teams" height="200px" width="200px">\n<p><small class="caption">Image source from https://martinfowler.com<small></p>\n<h4>Ease of deployments with better isolation</h4>\n<p>The other key point from MFE is that you can deploy your code with more confident without scare you will break feature or code from the another teams. This is because MFE often coming from different repository with different deployment pipeline and different server to serve the code in production environment.</p>\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/you-might-not-need-microfe/deployment.png" alt="Micro FE deployment" height="200px" width="200px">\n<p><small class="caption">Image source from https://martinfowler.com<small></p>\n<h4>Improved scalability with smaller pieces</h4>\n<p>With different deployment and different server, its easier to us to maintain the scalability. Instead of have one big server, we can split it into several small server that only serve small piece of fragment. It also make us have a clear visibility about the fragment that have a bigger usage, and the smaller one. We can reduce the specs for the smaller one and increase for the bigger one.</p>\n<h4>Localized complexity</h4>\n<p>MFE can localized the complexity of your web apps into several part. This is good that we doesn\'t need to put all of our logics and complexities in the same place. With the growing of your bussiness, these logics and complexities may will harm you someday if its on one place.</p>\n<h2>Problem you will face</h2>\n<p>Honestly, implementing MFE is not that easy. There are some concern you might face when try to adopt.</p>\n<h2>References:</h2>\n<ul>\n<li><a href="https://micro-frontends.org/">micro-frontends.org</a></li>\n<li><a href="https://martinfowler.com/articles/micro-frontends.html">martinfowler.com</a></li>\n</ul>\n<h3>May useful for you...</h3>\n',attributes:{title:"You might not need Micro Frontends",slug:"you-might-not-need-microfe",date:"2019-10-08",minute2read:15,description:"My mind about the latest trend in Micro Frontend",categories:["programming"],cover:"https://www.mazipan.xyz/content-images/you-might-not-need-microfe/microfe.png",_meta:{resourcePath:"/home/travis/build/mazipan/blog-2.0/contents/drafts/you-might-not-need-microfe/en.md"}},vue:{render:'return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"content-markdown"},[_c(\'h2\',[_vm._v("Disclaimer")]),_vm._v(" "),_c(\'p\',[_vm._v("Before we starting, you need to take a note that all in this article is my own words. It may be wrong, subjective and doesn\'t works well with your current situtations. Do not take any decisions based on only this article.")]),_vm._v(" "),_c(\'h2\',[_vm._v("About Micro Frontend")]),_vm._v(" "),_vm._m(0),_vm._v(" "),_c(\'h2\',[_vm._v("What\'s the MFE sells to Us?")]),_vm._v(" "),_c(\'p\',[_vm._v("MFE coming with many strong point that makes you as a developers interest in it. We will try to describe some of it in this below lists:")]),_vm._v(" "),_c(\'h4\',[_vm._v("Technology stack isolation")]),_vm._v(" "),_c(\'p\',[_vm._v("MFE enable possibility to use different technology stack in Frontend. Let\'s say you want to develop header fragment using React, then you switch to Vue when developing the sidebar fragment. It possible with the isolation concept brings by MFE.")]),_vm._v(" "),_c(\'h4\',[_vm._v("Autonomous teams")]),_vm._v(" "),_c(\'p\',[_vm._v("This is maybe the coolest thing in MFE, you can have seperate teams which normally composed by different specialized person, like you can have one frontend developer, one backend developer, one designer, one product manager, etc in one team. They all can work without having worry their improvement or fixing will crashing another team improvement. It because they will only working in small piece of fragment that treats as a single web apps instead of one full pages.")]),_vm._v(" "),_c(\'p\',[_vm._v("This approach somehow can increase the effectiveness and efficiency of teams working on frontend code, and the teams entirely. They will have a full ownership on their own fragments, they can iterate faster in development. Instead of organizing the team based on their specialization, we can organizing based on bussiness scope or we usually called as a \\"vertical\\" alignment.")]),_vm._v(" "),_c(\'img\',{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{"src":"/images/placeholder-1x1.png","data-src":"/content-images/you-might-not-need-microfe/horizontal.png","alt":"Micro FE horizontal teams","height":"200px","width":"200px"}}),_vm._v(" "),_vm._m(1),_vm._v(" "),_c(\'h4\',[_vm._v("Ease of deployments with better isolation")]),_vm._v(" "),_c(\'p\',[_vm._v("The other key point from MFE is that you can deploy your code with more confident without scare you will break feature or code from the another teams. This is because MFE often coming from different repository with different deployment pipeline and different server to serve the code in production environment.")]),_vm._v(" "),_c(\'img\',{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{"src":"/images/placeholder-1x1.png","data-src":"/content-images/you-might-not-need-microfe/deployment.png","alt":"Micro FE deployment","height":"200px","width":"200px"}}),_vm._v(" "),_vm._m(2),_vm._v(" "),_c(\'h4\',[_vm._v("Improved scalability with smaller pieces")]),_vm._v(" "),_c(\'p\',[_vm._v("With different deployment and different server, its easier to us to maintain the scalability. Instead of have one big server, we can split it into several small server that only serve small piece of fragment. It also make us have a clear visibility about the fragment that have a bigger usage, and the smaller one. We can reduce the specs for the smaller one and increase for the bigger one.")]),_vm._v(" "),_c(\'h4\',[_vm._v("Localized complexity")]),_vm._v(" "),_c(\'p\',[_vm._v("MFE can localized the complexity of your web apps into several part. This is good that we doesn\'t need to put all of our logics and complexities in the same place. With the growing of your bussiness, these logics and complexities may will harm you someday if its on one place.")]),_vm._v(" "),_c(\'h2\',[_vm._v("Problem you will face")]),_vm._v(" "),_c(\'p\',[_vm._v("Honestly, implementing MFE is not that easy. There are some concern you might face when try to adopt.")]),_vm._v(" "),_c(\'h2\',[_vm._v("References:")]),_vm._v(" "),_vm._m(3),_vm._v(" "),_c(\'h3\',[_vm._v("May useful for you...")])]) }',staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("You might ever heard the term of "),_c(\'em\',[_vm._v("Micro Frontends")]),_vm._v(" (MFE), basically its just copycat from the concept of "),_c(\'em\',[_vm._v("Micro Services")]),_vm._v(" in backend area. Like "),_c(\'em\',[_vm._v("Micro Services")]),_vm._v(" that got very huge popularity in backend, MFE is also got good tractions in its adoptions. Every startup, every FE developers want to implementing this concept into their current projects.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'small\',{staticClass:"caption"},[_vm._v("Image source from https://martinfowler.com"),_c(\'small\')])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'small\',{staticClass:"caption"},[_vm._v("Image source from https://martinfowler.com"),_c(\'small\')])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_c(\'a\',{attrs:{"href":"https://micro-frontends.org/"}},[_vm._v("micro-frontends.org")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://martinfowler.com/articles/micro-frontends.html"}},[_vm._v("martinfowler.com")])])]) }]',component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("div",{staticClass:"content-markdown"},[o("h2",[e._v("Disclaimer")]),e._v(" "),o("p",[e._v("Before we starting, you need to take a note that all in this article is my own words. It may be wrong, subjective and doesn't works well with your current situtations. Do not take any decisions based on only this article.")]),e._v(" "),o("h2",[e._v("About Micro Frontend")]),e._v(" "),e._m(0),e._v(" "),o("h2",[e._v("What's the MFE sells to Us?")]),e._v(" "),o("p",[e._v("MFE coming with many strong point that makes you as a developers interest in it. We will try to describe some of it in this below lists:")]),e._v(" "),o("h4",[e._v("Technology stack isolation")]),e._v(" "),o("p",[e._v("MFE enable possibility to use different technology stack in Frontend. Let's say you want to develop header fragment using React, then you switch to Vue when developing the sidebar fragment. It possible with the isolation concept brings by MFE.")]),e._v(" "),o("h4",[e._v("Autonomous teams")]),e._v(" "),o("p",[e._v("This is maybe the coolest thing in MFE, you can have seperate teams which normally composed by different specialized person, like you can have one frontend developer, one backend developer, one designer, one product manager, etc in one team. They all can work without having worry their improvement or fixing will crashing another team improvement. It because they will only working in small piece of fragment that treats as a single web apps instead of one full pages.")]),e._v(" "),o("p",[e._v('This approach somehow can increase the effectiveness and efficiency of teams working on frontend code, and the teams entirely. They will have a full ownership on their own fragments, they can iterate faster in development. Instead of organizing the team based on their specialization, we can organizing based on bussiness scope or we usually called as a "vertical" alignment.')]),e._v(" "),o("img",{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{src:"/images/placeholder-1x1.png","data-src":"/content-images/you-might-not-need-microfe/horizontal.png",alt:"Micro FE horizontal teams",height:"200px",width:"200px"}}),e._v(" "),e._m(1),e._v(" "),o("h4",[e._v("Ease of deployments with better isolation")]),e._v(" "),o("p",[e._v("The other key point from MFE is that you can deploy your code with more confident without scare you will break feature or code from the another teams. This is because MFE often coming from different repository with different deployment pipeline and different server to serve the code in production environment.")]),e._v(" "),o("img",{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{src:"/images/placeholder-1x1.png","data-src":"/content-images/you-might-not-need-microfe/deployment.png",alt:"Micro FE deployment",height:"200px",width:"200px"}}),e._v(" "),e._m(2),e._v(" "),o("h4",[e._v("Improved scalability with smaller pieces")]),e._v(" "),o("p",[e._v("With different deployment and different server, its easier to us to maintain the scalability. Instead of have one big server, we can split it into several small server that only serve small piece of fragment. It also make us have a clear visibility about the fragment that have a bigger usage, and the smaller one. We can reduce the specs for the smaller one and increase for the bigger one.")]),e._v(" "),o("h4",[e._v("Localized complexity")]),e._v(" "),o("p",[e._v("MFE can localized the complexity of your web apps into several part. This is good that we doesn't need to put all of our logics and complexities in the same place. With the growing of your bussiness, these logics and complexities may will harm you someday if its on one place.")]),e._v(" "),o("h2",[e._v("Problem you will face")]),e._v(" "),o("p",[e._v("Honestly, implementing MFE is not that easy. There are some concern you might face when try to adopt.")]),e._v(" "),o("h2",[e._v("References:")]),e._v(" "),e._m(3),e._v(" "),o("h3",[e._v("May useful for you...")])])},this.$options.staticRenderFns=[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You might ever heard the term of "),t("em",[this._v("Micro Frontends")]),this._v(" (MFE), basically its just copycat from the concept of "),t("em",[this._v("Micro Services")]),this._v(" in backend area. Like "),t("em",[this._v("Micro Services")]),this._v(" that got very huge popularity in backend, MFE is also got good tractions in its adoptions. Every startup, every FE developers want to implementing this concept into their current projects.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("small",{staticClass:"caption"},[this._v("Image source from https://martinfowler.com"),t("small")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("small",{staticClass:"caption"},[this._v("Image source from https://martinfowler.com"),t("small")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("a",{attrs:{href:"https://micro-frontends.org/"}},[this._v("micro-frontends.org")])]),this._v(" "),t("li",[t("a",{attrs:{href:"https://martinfowler.com/articles/micro-frontends.html"}},[this._v("martinfowler.com")])])])}]}}}}}}]);