(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{202:function(e,t){e.exports={body:'## About AMP\n\nAMP (Accelerated Mobile Pages - [amp.dev ↗️](https://amp.dev)) is Google\'s iniisatif for helping publishers, developers and website owner to serve website with fast first load time even nearly instant in mobile devices. For achieving that instant loading is not free, this can be done by AMP with applying so many strict rule for websites. We can say that AMP is strip down all your custom JavaScript to guarantee your website have instant load time.\n\nAMP is recommended by Google because it is very user centrict. Google also will prioritize the contents with AMP support with adding a badge in the search results to indicate AMP. Google also support with adding the caches to boost the first load speed into the limit which make AMP is the best choice for first user landing from the search result.\n\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png" alt="Mazipan AMP" height="200px" width="200px">\n\n## Basics for Creating AMP\n\nAMP is seperate pages with the normal one. This is because AMP have different strict rule that make us harder to implement in our existing technology stack that usually become very depends on JavaScript.\n\nFor creating new AMP pages, first we need to add an identifier in `html` tag to make browser know that the pages is AMP version.\n\nIf in normal HTML we can have this below code:\n\n```html\n<html>\n  <head></head>\n  <body></body>\n<html>\n```\n\nIn AMP we will add emoji ⚡ in our `html` tag, see below example:\n\n```html\n<html ⚡>\n  <head></head>\n  <body></body>\n<html>\n```\n\nOr we can just change the ⚡ emoji with attribute `amp` without any values if we didn\'t support emoji.\n\nAfter adding the identifier, we need to add the main AMP engine script with this below code:\n\n```html\n<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n```\n\nWe also need to add CSS boilerplate for all AMP pages:\n\n```html\n<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n```\n\nThe things we need to be noted is AMP is not allowing any custom JavaScript or any external third party JavaScript link.\n\nSo do with CSS file, we can\'t load any external CSS file. All style need to be loaded internally using tag `amp-custom` like below example code:\n\n```html\n<style amp-custom>\n  .custom-class {}\n</style>\n```\n\nIn AMP, we can use any `!important` in our CSS code.\n\nBasically, we can use any HTML tag inside our `<body>` tag. But AMP already creating many components to help us in creating a common layout or functionality. Better for us to read in [AMPs official documentations](https://amp.dev/documentation/components/?format=websites) about the components that already created by AMP teams so we can have better visibility when creating AMP pages in the future.\n\n## Generate AMP in Nuxt.js\n\nCreating AMP pages in JavaScript framework was like an impossible things to do. This is because JavaScript is forbidden in AMP, while in JavaScript framework become the main technology to be used.\n\nToday, JavaScript framework already have power to generate static pages like Nuxt.js already done. In my blog itself, I use Nuxt.js for generate static pages to simplify my deployment process. Unfortunately, the static files that generated bu Nuxt.js is bloated with many external JavaScript that need to be clean up first. So the hardest task to generate AMP in Nuxt.js is cleaning process itself.\n\nThese are steps that I have been done in generate AMP for my blog:\n\n### 1. Creating new pages\n\nFirst of all, I need to create new pages under the same root url `/amp/**` with nearly same content with the normal pages. This is for helping us to differentiate AMP pages with the normal pages so we can running clean up process is only for AMP pages an skip the normal pages.\n\n### 2. Remove unused codes\n\nBecause AMP is not allowing any custom JavaScript actions, so any codes in our AMP pages which placed under `methods` in Vue\'s single file components file are need to be removed. This code become unused because we need to strip down all interactions that require any custom Javascript.\n\n### 3. Adding hooks in generate\n\nI use `generate` command in Nuxt.js to creating static files for my blog so I need to add hooks to detect when this command is executed. In Nuxt, this task can be done with adding this below code in `nuxt.config.js` file like this below example:\n\n```javascript\nmodule.exports = {\n  hooks: {\n    \'generate:page\': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n      }\n    }\n  },\n}\n```\n\nThe code above is for inserting a process when Nuxt execute command `generate` and we adding *Regular Expressions* to detect only the AMP pages route that have added process and skip all the normal pages.\n\n### 4. Manipulate HTML output\n\nFrom our sample code above, we have `page` object as parameter in our generate hooks. If we get property `page.html` we can get the HTML string as our final output as HTML file.\n\nThe good thing from Internet is there are many good people there. I found the article from [toor.co ↗️](https://toor.co/blog/amp-pages-using-nuxt-js/) that share about cleaning up HTML string from Nuxt to support AMP.\n\nWe can just copy-paste this below code:\n\n```javascript\nconst ampScript = \'<script async src="https://cdn.ampproject.org/v0.js"><\/script>\'\nconst ampBoilerplate = \'<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\'\n\nmodule.exports = (html) => {\n  // Add ⚡ to html tag\n  html = html.replace(/<html/gi, \'<html ⚡\')\n\n  // Combine css into single tag\n  let styleConcat = \'\'\n  html = html.replace(/<style[^>]*data-vue-ssr[^>]*>(.*?)?<\\/style>/gi, (match, sub) => {\n    styleConcat += sub\n    return \'\'\n  })\n  html = html.replace(\'</head>\', `<style amp-custom>${styleConcat}</style></head>`)\n\n  // Remove preload and prefetch tags\n  html = html.replace(/<link[^>]*rel="(?:preload|prefetch)?"[^>]*>/gi, \'\')\n\n  // Remove amphtml tag\n  html = html.replace(/<link[^>]*rel="(?:amphtml)?"[^>]*>/gi, \'\')\n\n  // Remove data attributes from tags\n  html = html.replace(/\\s*data-(?:[^=>]*="[^"]*"|[^=>\\s]*)/gi, \'\')\n\n  // Remove JS script tags except for ld+json\n  html = html.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, (match) => {\n    return (/application\\/ld\\+json/gi.test(match)) ? match : \'\'\n  })\n\n  // Replace img tags with amp-img\n  html = html.replace(/<img([^>]*)>/gi, (match, sub) => {\n    return `<amp-img ${sub} layout=intrinsic></amp-img>`\n  })\n\n  // Add AMP script before </head>\n  html = html.replace(\'</head>\', ampScript + ampBoilerplate + \'</head>\')\n\n  return html\n}\n```\n\nYou can check the detail of each process with reading the comments in that code. Basically we just *replace* the characters we didn\'t need with *RegEx* and adding AMP support script. We adding emoji ⚡, remove all external JavaScript, combine all internal CSS into one tag under `<style amp-custom>` and any other tasks.\n\nThis functions is put in `plugins/ampify.js` directory that will be called in generate hook generate like this below sample:\n\n\n```javascript\nconst ampify = require(\'./plugins/ampify\')\n\nmodule.exports = {\n  hooks: {\n    \'generate:page\': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n        page.html = ampify(page.html)\n      }\n    }\n  },\n}\n```\n\n### 5. Change all scoped style to global style\n\nBecause I am not good enough to playing with *RegEx* code, it\'s very risky to update the RegEx when something unexpected happened.\n\nAnd I realize that this below code make weird result:\n\n```javascript\n// Remove data attributes from tags\nhtml = html.replace(/\\s*data-(?:[^=>]*="[^"]*"|[^=>\\s]*)/gi, \'\')\n```\n\nThe above code made all my scoped style become invalid because wrong replace process. The easiest part for me to solve this thing is move all scoped style into global style. But this task can be done easily because with unscoped style I need to apply CSS module architecture to keep the CSS from one components is not affecting any other component. I prefer use BEM CSS because of my experience of using this CSS convention.\n\nThis step is optional for you if you can update the Regex part that made weird replace process.\n\n### 6. Change all lazy load images\n\nIn non-AMP pages, I use [VueTinyLazyloadImg ↗️](https://github.com/mazipan/vue-tiny-lazyload-img) library to creating lazy load image. For AMP we don\'t need this library anymore because amp have `amp-img` component that already support lazy load by default.\n\nUsing `amp-img` make my existing function in lazy load become invalid for AMP because with in existing function I put attribut `data-src` to load the original source of image and using `src` for placeholder image. This thing need to be adjust for AMP with replacing `data-src` attribute with `src` and delete placeholder image.\n\nYou can see the RegEX function in this below sample:\n\n```javascript\nfunction replaceLazyloadImg (str) {\n  return str && str.replace(/"src":(?:[^=>][^"]*","data-src"|[^=>"]*)/gi, \'"src"\')\n}\n```\n\n### 7. Adding fix size for images\n\nThis is the step that I haven\'t done when this article published. All the image tag should have `height` and `width` attribute.\n\n### 8. Adding canonical\n\nWe need to linking our AMP with each respective normal pages that have same content with our AMP.\n\nYou can put link canonical under `<head>` tag in AMP page like in this below code :\n\n```html\n<head>\n  <link rel="canonical" href="url-to-normal-page"></link>\n</head>\n```\n\nIn our normal page we can add `amphtml` link, see this below code:\n\n```html\n<link rel="amphtml" href="url-to-amp-page"></link>\n```\n\nIn Nuxt.js, we can add this meta tag via `head()` in our .vue files, see this below sample:\n\n```javascript\nexport default {\n  head () {\n    const url = `${this.productionUrl}/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'canonical\', rel: \'canonical\', href: url }\n      ]\n    }\n  }\n}\n```\n\nAnd this below code is sample to insert tag `amphtml` in normal page:\n\n```javascript\nexport default {\n  head () {\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'amphtml\', rel: \'amphtml\', href: ampUrl }\n      ]\n    }\n  }\n}\n```\n\n### 9. Adding Google Analytics\n\nAdding Google Analytics in AMP is quite different with the normal page. In short, we just need to add this below script to adding Google Analytics engine in our AMP pages:\n\n```html\n<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>\n```\n\nAlso placing this below simple tracker to tracking page view state:\n\n```html\n<amp-analytics type=\'googleanalytics\'>\n  <script type=\'application/json\'>\n    {\n      "vars": {\n        "account": "UA-12345678-X"\n      },\n      "triggers": {\n        "trackPageview": {\n          "on": "visible",\n          "request": "pageview"\n        }\n      }\n    }\n  <\/script>\n</amp-analytics>\n```\n\nI update the `ampify` script to insert analytics into our AMP pages:\n\n```javascript\nconst ampScript = `<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>`\n```\n\nWe also insert page view tracker before close tag `</body>` like this below code:\n\n```javascript\n// Add AMP analytics\nhtml = html.replace(\'</body>\',\n`<amp-analytics type=\'googleanalytics\'>\n    <script type=\'application/json\'>\n      {\n        "vars": {\n          "account": "UA-12345678-X"\n        },\n        "triggers": {\n          "trackPageview": {\n            "on": "visible",\n            "request": "pageview"\n          }\n        }\n      }\n    <\/script>\n  </amp-analytics>\n</body>`)\n```\n\n## Validate AMP Pages\n\nNot all AMP can be shown in Google Search result, only the valid pages that can have badge in search result. So we need to test the validity first before publishing our AMP pages. There are some alternatives outside to test AMP validation, two website that I can mention are:\n\n- [https://search.google.com/test/amp](https://search.google.com/test/amp)\n- [https://validator.ampproject.org/](https://validator.ampproject.org/)\n\nFor my blog itself, you can see the test results in below list:\n\n- [Homepage](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp)\n- [About Page](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout)\n- [Article Page - without any images](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F)\n- [Article Page - with images](https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F)\n\n\n## Github Repo\n\n[https://github.com/mazipan/blog-2.0 ↗️](https://github.com/mazipan/blog-2.0)\n\n### Hopefully useful...\n',html:'<h2>About AMP</h2>\n<p>AMP (Accelerated Mobile Pages - <a href="https://amp.dev">amp.dev ↗️</a>) is Google\'s iniisatif for helping publishers, developers and website owner to serve website with fast first load time even nearly instant in mobile devices. For achieving that instant loading is not free, this can be done by AMP with applying so many strict rule for websites. We can say that AMP is strip down all your custom JavaScript to guarantee your website have instant load time.</p>\n<p>AMP is recommended by Google because it is very user centrict. Google also will prioritize the contents with AMP support with adding a badge in the search results to indicate AMP. Google also support with adding the caches to boost the first load speed into the limit which make AMP is the best choice for first user landing from the search result.</p>\n<img v-lazyload src="/images/placeholder-1x1.png" data-src="/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png" alt="Mazipan AMP" height="200px" width="200px">\n<h2>Basics for Creating AMP</h2>\n<p>AMP is seperate pages with the normal one. This is because AMP have different strict rule that make us harder to implement in our existing technology stack that usually become very depends on JavaScript.</p>\n<p>For creating new AMP pages, first we need to add an identifier in <code>html</code> tag to make browser know that the pages is AMP version.</p>\n<p>If in normal HTML we can have this below code:</p>\n<pre><code class="language-html">&lt;html&gt;\n  &lt;head&gt;&lt;/head&gt;\n  &lt;body&gt;&lt;/body&gt;\n&lt;html&gt;\n</code></pre>\n<p>In AMP we will add emoji ⚡ in our <code>html</code> tag, see below example:</p>\n<pre><code class="language-html">&lt;html ⚡&gt;\n  &lt;head&gt;&lt;/head&gt;\n  &lt;body&gt;&lt;/body&gt;\n&lt;html&gt;\n</code></pre>\n<p>Or we can just change the ⚡ emoji with attribute <code>amp</code> without any values if we didn\'t support emoji.</p>\n<p>After adding the identifier, we need to add the main AMP engine script with this below code:</p>\n<pre><code class="language-html">&lt;script async src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>We also need to add CSS boilerplate for all AMP pages:</p>\n<pre><code class="language-html">&lt;style amp-boilerplate&gt;body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}&lt;/style&gt;&lt;noscript&gt;&lt;style amp-boilerplate&gt;body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}&lt;/style&gt;&lt;/noscript&gt;\n</code></pre>\n<p>The things we need to be noted is AMP is not allowing any custom JavaScript or any external third party JavaScript link.</p>\n<p>So do with CSS file, we can\'t load any external CSS file. All style need to be loaded internally using tag <code>amp-custom</code> like below example code:</p>\n<pre><code class="language-html">&lt;style amp-custom&gt;\n  .custom-class {}\n&lt;/style&gt;\n</code></pre>\n<p>In AMP, we can use any <code>!important</code> in our CSS code.</p>\n<p>Basically, we can use any HTML tag inside our <code>&lt;body&gt;</code> tag. But AMP already creating many components to help us in creating a common layout or functionality. Better for us to read in <a href="https://amp.dev/documentation/components/?format=websites">AMPs official documentations</a> about the components that already created by AMP teams so we can have better visibility when creating AMP pages in the future.</p>\n<h2>Generate AMP in Nuxt.js</h2>\n<p>Creating AMP pages in JavaScript framework was like an impossible things to do. This is because JavaScript is forbidden in AMP, while in JavaScript framework become the main technology to be used.</p>\n<p>Today, JavaScript framework already have power to generate static pages like Nuxt.js already done. In my blog itself, I use Nuxt.js for generate static pages to simplify my deployment process. Unfortunately, the static files that generated bu Nuxt.js is bloated with many external JavaScript that need to be clean up first. So the hardest task to generate AMP in Nuxt.js is cleaning process itself.</p>\n<p>These are steps that I have been done in generate AMP for my blog:</p>\n<h3>1. Creating new pages</h3>\n<p>First of all, I need to create new pages under the same root url <code>/amp/**</code> with nearly same content with the normal pages. This is for helping us to differentiate AMP pages with the normal pages so we can running clean up process is only for AMP pages an skip the normal pages.</p>\n<h3>2. Remove unused codes</h3>\n<p>Because AMP is not allowing any custom JavaScript actions, so any codes in our AMP pages which placed under <code>methods</code> in Vue\'s single file components file are need to be removed. This code become unused because we need to strip down all interactions that require any custom Javascript.</p>\n<h3>3. Adding hooks in generate</h3>\n<p>I use <code>generate</code> command in Nuxt.js to creating static files for my blog so I need to add hooks to detect when this command is executed. In Nuxt, this task can be done with adding this below code in <code>nuxt.config.js</code> file like this below example:</p>\n<pre><code class="language-javascript">module.exports = {\n  hooks: {\n    \'generate:page\': (page) =&gt; {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n      }\n    }\n  },\n}\n</code></pre>\n<p>The code above is for inserting a process when Nuxt execute command <code>generate</code> and we adding <em>Regular Expressions</em> to detect only the AMP pages route that have added process and skip all the normal pages.</p>\n<h3>4. Manipulate HTML output</h3>\n<p>From our sample code above, we have <code>page</code> object as parameter in our generate hooks. If we get property <code>page.html</code> we can get the HTML string as our final output as HTML file.</p>\n<p>The good thing from Internet is there are many good people there. I found the article from <a href="https://toor.co/blog/amp-pages-using-nuxt-js/">toor.co ↗️</a> that share about cleaning up HTML string from Nuxt to support AMP.</p>\n<p>We can just copy-paste this below code:</p>\n<pre><code class="language-javascript">const ampScript = \'&lt;script async src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt;\'\nconst ampBoilerplate = \'&lt;style amp-boilerplate&gt;body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}&lt;/style&gt;&lt;noscript&gt;&lt;style amp-boilerplate&gt;body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}&lt;/style&gt;&lt;/noscript&gt;\'\n\nmodule.exports = (html) =&gt; {\n  // Add ⚡ to html tag\n  html = html.replace(/&lt;html/gi, \'&lt;html ⚡\')\n\n  // Combine css into single tag\n  let styleConcat = \'\'\n  html = html.replace(/&lt;style[^&gt;]*data-vue-ssr[^&gt;]*&gt;(.*?)?&lt;\\/style&gt;/gi, (match, sub) =&gt; {\n    styleConcat += sub\n    return \'\'\n  })\n  html = html.replace(\'&lt;/head&gt;\', `&lt;style amp-custom&gt;${styleConcat}&lt;/style&gt;&lt;/head&gt;`)\n\n  // Remove preload and prefetch tags\n  html = html.replace(/&lt;link[^&gt;]*rel=&quot;(?:preload|prefetch)?&quot;[^&gt;]*&gt;/gi, \'\')\n\n  // Remove amphtml tag\n  html = html.replace(/&lt;link[^&gt;]*rel=&quot;(?:amphtml)?&quot;[^&gt;]*&gt;/gi, \'\')\n\n  // Remove data attributes from tags\n  html = html.replace(/\\s*data-(?:[^=&gt;]*=&quot;[^&quot;]*&quot;|[^=&gt;\\s]*)/gi, \'\')\n\n  // Remove JS script tags except for ld+json\n  html = html.replace(/&lt;script\\b[^&lt;]*(?:(?!&lt;\\/script&gt;)&lt;[^&lt;]*)*&lt;\\/script&gt;/gi, (match) =&gt; {\n    return (/application\\/ld\\+json/gi.test(match)) ? match : \'\'\n  })\n\n  // Replace img tags with amp-img\n  html = html.replace(/&lt;img([^&gt;]*)&gt;/gi, (match, sub) =&gt; {\n    return `&lt;amp-img ${sub} layout=intrinsic&gt;&lt;/amp-img&gt;`\n  })\n\n  // Add AMP script before &lt;/head&gt;\n  html = html.replace(\'&lt;/head&gt;\', ampScript + ampBoilerplate + \'&lt;/head&gt;\')\n\n  return html\n}\n</code></pre>\n<p>You can check the detail of each process with reading the comments in that code. Basically we just <em>replace</em> the characters we didn\'t need with <em>RegEx</em> and adding AMP support script. We adding emoji ⚡, remove all external JavaScript, combine all internal CSS into one tag under <code>&lt;style amp-custom&gt;</code> and any other tasks.</p>\n<p>This functions is put in <code>plugins/ampify.js</code> directory that will be called in generate hook generate like this below sample:</p>\n<pre><code class="language-javascript">const ampify = require(\'./plugins/ampify\')\n\nmodule.exports = {\n  hooks: {\n    \'generate:page\': (page) =&gt; {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log(\'processing amp file: \', page.route)\n        page.html = ampify(page.html)\n      }\n    }\n  },\n}\n</code></pre>\n<h3>5. Change all scoped style to global style</h3>\n<p>Because I am not good enough to playing with <em>RegEx</em> code, it\'s very risky to update the RegEx when something unexpected happened.</p>\n<p>And I realize that this below code make weird result:</p>\n<pre><code class="language-javascript">// Remove data attributes from tags\nhtml = html.replace(/\\s*data-(?:[^=&gt;]*=&quot;[^&quot;]*&quot;|[^=&gt;\\s]*)/gi, \'\')\n</code></pre>\n<p>The above code made all my scoped style become invalid because wrong replace process. The easiest part for me to solve this thing is move all scoped style into global style. But this task can be done easily because with unscoped style I need to apply CSS module architecture to keep the CSS from one components is not affecting any other component. I prefer use BEM CSS because of my experience of using this CSS convention.</p>\n<p>This step is optional for you if you can update the Regex part that made weird replace process.</p>\n<h3>6. Change all lazy load images</h3>\n<p>In non-AMP pages, I use <a href="https://github.com/mazipan/vue-tiny-lazyload-img">VueTinyLazyloadImg ↗️</a> library to creating lazy load image. For AMP we don\'t need this library anymore because amp have <code>amp-img</code> component that already support lazy load by default.</p>\n<p>Using <code>amp-img</code> make my existing function in lazy load become invalid for AMP because with in existing function I put attribut <code>data-src</code> to load the original source of image and using <code>src</code> for placeholder image. This thing need to be adjust for AMP with replacing <code>data-src</code> attribute with <code>src</code> and delete placeholder image.</p>\n<p>You can see the RegEX function in this below sample:</p>\n<pre><code class="language-javascript">function replaceLazyloadImg (str) {\n  return str &amp;&amp; str.replace(/&quot;src&quot;:(?:[^=&gt;][^&quot;]*&quot;,&quot;data-src&quot;|[^=&gt;&quot;]*)/gi, \'&quot;src&quot;\')\n}\n</code></pre>\n<h3>7. Adding fix size for images</h3>\n<p>This is the step that I haven\'t done when this article published. All the image tag should have <code>height</code> and <code>width</code> attribute.</p>\n<h3>8. Adding canonical</h3>\n<p>We need to linking our AMP with each respective normal pages that have same content with our AMP.</p>\n<p>You can put link canonical under <code>&lt;head&gt;</code> tag in AMP page like in this below code :</p>\n<pre><code class="language-html">&lt;head&gt;\n  &lt;link rel=&quot;canonical&quot; href=&quot;url-to-normal-page&quot;&gt;&lt;/link&gt;\n&lt;/head&gt;\n</code></pre>\n<p>In our normal page we can add <code>amphtml</code> link, see this below code:</p>\n<pre><code class="language-html">&lt;link rel=&quot;amphtml&quot; href=&quot;url-to-amp-page&quot;&gt;&lt;/link&gt;\n</code></pre>\n<p>In Nuxt.js, we can add this meta tag via <code>head()</code> in our .vue files, see this below sample:</p>\n<pre><code class="language-javascript">export default {\n  head () {\n    const url = `${this.productionUrl}/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'canonical\', rel: \'canonical\', href: url }\n      ]\n    }\n  }\n}\n</code></pre>\n<p>And this below code is sample to insert tag <code>amphtml</code> in normal page:</p>\n<pre><code class="language-javascript">export default {\n  head () {\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\n    return {\n      link: [\n        { hid: \'amphtml\', rel: \'amphtml\', href: ampUrl }\n      ]\n    }\n  }\n}\n</code></pre>\n<h3>9. Adding Google Analytics</h3>\n<p>Adding Google Analytics in AMP is quite different with the normal page. In short, we just need to add this below script to adding Google Analytics engine in our AMP pages:</p>\n<pre><code class="language-html">&lt;script async custom-element=&quot;amp-analytics&quot; src=&quot;https://cdn.ampproject.org/v0/amp-analytics-0.1.js&quot;&gt;&lt;/script&gt;\n</code></pre>\n<p>Also placing this below simple tracker to tracking page view state:</p>\n<pre><code class="language-html">&lt;amp-analytics type=\'googleanalytics\'&gt;\n  &lt;script type=\'application/json\'&gt;\n    {\n      &quot;vars&quot;: {\n        &quot;account&quot;: &quot;UA-12345678-X&quot;\n      },\n      &quot;triggers&quot;: {\n        &quot;trackPageview&quot;: {\n          &quot;on&quot;: &quot;visible&quot;,\n          &quot;request&quot;: &quot;pageview&quot;\n        }\n      }\n    }\n  &lt;/script&gt;\n&lt;/amp-analytics&gt;\n</code></pre>\n<p>I update the <code>ampify</code> script to insert analytics into our AMP pages:</p>\n<pre><code class="language-javascript">const ampScript = `&lt;script async src=&quot;https://cdn.ampproject.org/v0.js&quot;&gt;&lt;/script&gt;\n&lt;script async custom-element=&quot;amp-analytics&quot; src=&quot;https://cdn.ampproject.org/v0/amp-analytics-0.1.js&quot;&gt;&lt;/script&gt;`\n</code></pre>\n<p>We also insert page view tracker before close tag <code>&lt;/body&gt;</code> like this below code:</p>\n<pre><code class="language-javascript">// Add AMP analytics\nhtml = html.replace(\'&lt;/body&gt;\',\n`&lt;amp-analytics type=\'googleanalytics\'&gt;\n    &lt;script type=\'application/json\'&gt;\n      {\n        &quot;vars&quot;: {\n          &quot;account&quot;: &quot;UA-12345678-X&quot;\n        },\n        &quot;triggers&quot;: {\n          &quot;trackPageview&quot;: {\n            &quot;on&quot;: &quot;visible&quot;,\n            &quot;request&quot;: &quot;pageview&quot;\n          }\n        }\n      }\n    &lt;/script&gt;\n  &lt;/amp-analytics&gt;\n&lt;/body&gt;`)\n</code></pre>\n<h2>Validate AMP Pages</h2>\n<p>Not all AMP can be shown in Google Search result, only the valid pages that can have badge in search result. So we need to test the validity first before publishing our AMP pages. There are some alternatives outside to test AMP validation, two website that I can mention are:</p>\n<ul>\n<li><a href="https://search.google.com/test/amp">https://search.google.com/test/amp</a></li>\n<li><a href="https://validator.ampproject.org/">https://validator.ampproject.org/</a></li>\n</ul>\n<p>For my blog itself, you can see the test results in below list:</p>\n<ul>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp">Homepage</a></li>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout">About Page</a></li>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F">Article Page - without any images</a></li>\n<li><a href="https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F">Article Page - with images</a></li>\n</ul>\n<h2>Github Repo</h2>\n<p><a href="https://github.com/mazipan/blog-2.0">https://github.com/mazipan/blog-2.0 ↗️</a></p>\n<h3>Hopefully useful...</h3>\n',attributes:{title:"Generate AMP Pages in Nuxt.js",slug:"generate-amp-pages-in-nuxtjs",date:"2019-06-02",minute2read:20,description:"How to generate AMP Pages for you blog using Nuxt.js",categories:["javascript","nuxt","amp"],cover:"https://www.mazipan.xyz/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png",_meta:{resourcePath:"/home/travis/build/mazipan/blog-2.0/contents/published/generate-amp-pages-in-nuxtjs/en.md"}},vue:{render:'return function render() { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'div\',{staticClass:"content-markdown"},[_c(\'h2\',[_vm._v("About AMP")]),_vm._v(" "),_vm._m(0),_vm._v(" "),_c(\'p\',[_vm._v("AMP is recommended by Google because it is very user centrict. Google also will prioritize the contents with AMP support with adding a badge in the search results to indicate AMP. Google also support with adding the caches to boost the first load speed into the limit which make AMP is the best choice for first user landing from the search result.")]),_vm._v(" "),_c(\'img\',{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{"src":"/images/placeholder-1x1.png","data-src":"/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png","alt":"Mazipan AMP","height":"200px","width":"200px"}}),_vm._v(" "),_c(\'h2\',[_vm._v("Basics for Creating AMP")]),_vm._v(" "),_c(\'p\',[_vm._v("AMP is seperate pages with the normal one. This is because AMP have different strict rule that make us harder to implement in our existing technology stack that usually become very depends on JavaScript.")]),_vm._v(" "),_vm._m(1),_vm._v(" "),_c(\'p\',[_vm._v("If in normal HTML we can have this below code:")]),_vm._v(" "),_vm._m(2),_vm._v(" "),_vm._m(3),_vm._v(" "),_vm._m(4),_vm._v(" "),_vm._m(5),_vm._v(" "),_c(\'p\',[_vm._v("After adding the identifier, we need to add the main AMP engine script with this below code:")]),_vm._v(" "),_vm._m(6),_vm._v(" "),_c(\'p\',[_vm._v("We also need to add CSS boilerplate for all AMP pages:")]),_vm._v(" "),_vm._m(7),_vm._v(" "),_c(\'p\',[_vm._v("The things we need to be noted is AMP is not allowing any custom JavaScript or any external third party JavaScript link.")]),_vm._v(" "),_vm._m(8),_vm._v(" "),_vm._m(9),_vm._v(" "),_vm._m(10),_vm._v(" "),_vm._m(11),_vm._v(" "),_c(\'h2\',[_vm._v("Generate AMP in Nuxt.js")]),_vm._v(" "),_c(\'p\',[_vm._v("Creating AMP pages in JavaScript framework was like an impossible things to do. This is because JavaScript is forbidden in AMP, while in JavaScript framework become the main technology to be used.")]),_vm._v(" "),_c(\'p\',[_vm._v("Today, JavaScript framework already have power to generate static pages like Nuxt.js already done. In my blog itself, I use Nuxt.js for generate static pages to simplify my deployment process. Unfortunately, the static files that generated bu Nuxt.js is bloated with many external JavaScript that need to be clean up first. So the hardest task to generate AMP in Nuxt.js is cleaning process itself.")]),_vm._v(" "),_c(\'p\',[_vm._v("These are steps that I have been done in generate AMP for my blog:")]),_vm._v(" "),_c(\'h3\',[_vm._v("1. Creating new pages")]),_vm._v(" "),_vm._m(12),_vm._v(" "),_c(\'h3\',[_vm._v("2. Remove unused codes")]),_vm._v(" "),_vm._m(13),_vm._v(" "),_c(\'h3\',[_vm._v("3. Adding hooks in generate")]),_vm._v(" "),_vm._m(14),_vm._v(" "),_vm._m(15),_vm._v(" "),_vm._m(16),_vm._v(" "),_c(\'h3\',[_vm._v("4. Manipulate HTML output")]),_vm._v(" "),_vm._m(17),_vm._v(" "),_vm._m(18),_vm._v(" "),_c(\'p\',[_vm._v("We can just copy-paste this below code:")]),_vm._v(" "),_vm._m(19),_vm._v(" "),_vm._m(20),_vm._v(" "),_vm._m(21),_vm._v(" "),_vm._m(22),_vm._v(" "),_c(\'h3\',[_vm._v("5. Change all scoped style to global style")]),_vm._v(" "),_vm._m(23),_vm._v(" "),_c(\'p\',[_vm._v("And I realize that this below code make weird result:")]),_vm._v(" "),_vm._m(24),_vm._v(" "),_c(\'p\',[_vm._v("The above code made all my scoped style become invalid because wrong replace process. The easiest part for me to solve this thing is move all scoped style into global style. But this task can be done easily because with unscoped style I need to apply CSS module architecture to keep the CSS from one components is not affecting any other component. I prefer use BEM CSS because of my experience of using this CSS convention.")]),_vm._v(" "),_c(\'p\',[_vm._v("This step is optional for you if you can update the Regex part that made weird replace process.")]),_vm._v(" "),_c(\'h3\',[_vm._v("6. Change all lazy load images")]),_vm._v(" "),_vm._m(25),_vm._v(" "),_vm._m(26),_vm._v(" "),_c(\'p\',[_vm._v("You can see the RegEX function in this below sample:")]),_vm._v(" "),_vm._m(27),_vm._v(" "),_c(\'h3\',[_vm._v("7. Adding fix size for images")]),_vm._v(" "),_vm._m(28),_vm._v(" "),_c(\'h3\',[_vm._v("8. Adding canonical")]),_vm._v(" "),_c(\'p\',[_vm._v("We need to linking our AMP with each respective normal pages that have same content with our AMP.")]),_vm._v(" "),_vm._m(29),_vm._v(" "),_vm._m(30),_vm._v(" "),_vm._m(31),_vm._v(" "),_vm._m(32),_vm._v(" "),_vm._m(33),_vm._v(" "),_vm._m(34),_vm._v(" "),_vm._m(35),_vm._v(" "),_vm._m(36),_vm._v(" "),_c(\'h3\',[_vm._v("9. Adding Google Analytics")]),_vm._v(" "),_c(\'p\',[_vm._v("Adding Google Analytics in AMP is quite different with the normal page. In short, we just need to add this below script to adding Google Analytics engine in our AMP pages:")]),_vm._v(" "),_vm._m(37),_vm._v(" "),_c(\'p\',[_vm._v("Also placing this below simple tracker to tracking page view state:")]),_vm._v(" "),_vm._m(38),_vm._v(" "),_vm._m(39),_vm._v(" "),_vm._m(40),_vm._v(" "),_vm._m(41),_vm._v(" "),_vm._m(42),_vm._v(" "),_c(\'h2\',[_vm._v("Validate AMP Pages")]),_vm._v(" "),_c(\'p\',[_vm._v("Not all AMP can be shown in Google Search result, only the valid pages that can have badge in search result. So we need to test the validity first before publishing our AMP pages. There are some alternatives outside to test AMP validation, two website that I can mention are:")]),_vm._v(" "),_vm._m(43),_vm._v(" "),_c(\'p\',[_vm._v("For my blog itself, you can see the test results in below list:")]),_vm._v(" "),_vm._m(44),_vm._v(" "),_c(\'h2\',[_vm._v("Github Repo")]),_vm._v(" "),_vm._m(45),_vm._v(" "),_c(\'h3\',[_vm._v("Hopefully useful...")])]) }',staticRenderFns:'return [function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("AMP (Accelerated Mobile Pages - "),_c(\'a\',{attrs:{"href":"https://amp.dev"}},[_vm._v("amp.dev ↗️")]),_vm._v(") is Google\'s iniisatif for helping publishers, developers and website owner to serve website with fast first load time even nearly instant in mobile devices. For achieving that instant loading is not free, this can be done by AMP with applying so many strict rule for websites. We can say that AMP is strip down all your custom JavaScript to guarantee your website have instant load time.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("For creating new AMP pages, first we need to add an identifier in "),_c(\'code\',{pre:true},[_vm._v("html")]),_vm._v(" tag to make browser know that the pages is AMP version.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<html>\\n  <head></head>\\n  <body></body>\\n<html>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("In AMP we will add emoji ⚡ in our "),_c(\'code\',{pre:true},[_vm._v("html")]),_vm._v(" tag, see below example:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<html ⚡>\\n  <head></head>\\n  <body></body>\\n<html>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Or we can just change the ⚡ emoji with attribute "),_c(\'code\',{pre:true},[_vm._v("amp")]),_vm._v(" without any values if we didn\'t support emoji.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<script async src=\\"https://cdn.ampproject.org/v0.js\\"><\/script>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("So do with CSS file, we can\'t load any external CSS file. All style need to be loaded internally using tag "),_c(\'code\',{pre:true},[_vm._v("amp-custom")]),_vm._v(" like below example code:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<style amp-custom>\\n  .custom-class {}\\n</style>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("In AMP, we can use any "),_c(\'code\',{pre:true},[_vm._v("!important")]),_vm._v(" in our CSS code.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Basically, we can use any HTML tag inside our "),_c(\'code\',{pre:true},[_vm._v("<body>")]),_vm._v(" tag. But AMP already creating many components to help us in creating a common layout or functionality. Better for us to read in "),_c(\'a\',{attrs:{"href":"https://amp.dev/documentation/components/?format=websites"}},[_vm._v("AMPs official documentations")]),_vm._v(" about the components that already created by AMP teams so we can have better visibility when creating AMP pages in the future.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("First of all, I need to create new pages under the same root url "),_c(\'code\',{pre:true},[_vm._v("/amp/**")]),_vm._v(" with nearly same content with the normal pages. This is for helping us to differentiate AMP pages with the normal pages so we can running clean up process is only for AMP pages an skip the normal pages.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Because AMP is not allowing any custom JavaScript actions, so any codes in our AMP pages which placed under "),_c(\'code\',{pre:true},[_vm._v("methods")]),_vm._v(" in Vue\'s single file components file are need to be removed. This code become unused because we need to strip down all interactions that require any custom Javascript.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("I use "),_c(\'code\',{pre:true},[_vm._v("generate")]),_vm._v(" command in Nuxt.js to creating static files for my blog so I need to add hooks to detect when this command is executed. In Nuxt, this task can be done with adding this below code in "),_c(\'code\',{pre:true},[_vm._v("nuxt.config.js")]),_vm._v(" file like this below example:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("module.exports = {\\n  hooks: {\\n    \'generate:page\': (page) => {\\n      if (/^\\\\/amp/gi.test(page.route)) {\\n        console.log(\'processing amp file: \', page.route)\\n      }\\n    }\\n  },\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("The code above is for inserting a process when Nuxt execute command "),_c(\'code\',{pre:true},[_vm._v("generate")]),_vm._v(" and we adding "),_c(\'em\',[_vm._v("Regular Expressions")]),_vm._v(" to detect only the AMP pages route that have added process and skip all the normal pages.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("From our sample code above, we have "),_c(\'code\',{pre:true},[_vm._v("page")]),_vm._v(" object as parameter in our generate hooks. If we get property "),_c(\'code\',{pre:true},[_vm._v("page.html")]),_vm._v(" we can get the HTML string as our final output as HTML file.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("The good thing from Internet is there are many good people there. I found the article from "),_c(\'a\',{attrs:{"href":"https://toor.co/blog/amp-pages-using-nuxt-js/"}},[_vm._v("toor.co ↗️")]),_vm._v(" that share about cleaning up HTML string from Nuxt to support AMP.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("const ampScript = \'<script async src=\\"https://cdn.ampproject.org/v0.js\\"><\/script>\'\\nconst ampBoilerplate = \'<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\'\\n\\nmodule.exports = (html) => {\\n  // Add ⚡ to html tag\\n  html = html.replace(/<html/gi, \'<html ⚡\')\\n\\n  // Combine css into single tag\\n  let styleConcat = \'\'\\n  html = html.replace(/<style[^>]*data-vue-ssr[^>]*>(.*?)?<\\\\/style>/gi, (match, sub) => {\\n    styleConcat += sub\\n    return \'\'\\n  })\\n  html = html.replace(\'</head>\', `<style amp-custom>${styleConcat}</style></head>`)\\n\\n  // Remove preload and prefetch tags\\n  html = html.replace(/<link[^>]*rel=\\"(?:preload|prefetch)?\\"[^>]*>/gi, \'\')\\n\\n  // Remove amphtml tag\\n  html = html.replace(/<link[^>]*rel=\\"(?:amphtml)?\\"[^>]*>/gi, \'\')\\n\\n  // Remove data attributes from tags\\n  html = html.replace(/\\\\s*data-(?:[^=>]*=\\"[^\\"]*\\"|[^=>\\\\s]*)/gi, \'\')\\n\\n  // Remove JS script tags except for ld+json\\n  html = html.replace(/<script\\\\b[^<]*(?:(?!<\\\\/script>)<[^<]*)*<\\\\/script>/gi, (match) => {\\n    return (/application\\\\/ld\\\\+json/gi.test(match)) ? match : \'\'\\n  })\\n\\n  // Replace img tags with amp-img\\n  html = html.replace(/<img([^>]*)>/gi, (match, sub) => {\\n    return `<amp-img ${sub} layout=intrinsic></amp-img>`\\n  })\\n\\n  // Add AMP script before </head>\\n  html = html.replace(\'</head>\', ampScript + ampBoilerplate + \'</head>\')\\n\\n  return html\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("You can check the detail of each process with reading the comments in that code. Basically we just "),_c(\'em\',[_vm._v("replace")]),_vm._v(" the characters we didn\'t need with "),_c(\'em\',[_vm._v("RegEx")]),_vm._v(" and adding AMP support script. We adding emoji ⚡, remove all external JavaScript, combine all internal CSS into one tag under "),_c(\'code\',{pre:true},[_vm._v("<style amp-custom>")]),_vm._v(" and any other tasks.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("This functions is put in "),_c(\'code\',{pre:true},[_vm._v("plugins/ampify.js")]),_vm._v(" directory that will be called in generate hook generate like this below sample:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("const ampify = require(\'./plugins/ampify\')\\n\\nmodule.exports = {\\n  hooks: {\\n    \'generate:page\': (page) => {\\n      if (/^\\\\/amp/gi.test(page.route)) {\\n        console.log(\'processing amp file: \', page.route)\\n        page.html = ampify(page.html)\\n      }\\n    }\\n  },\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Because I am not good enough to playing with "),_c(\'em\',[_vm._v("RegEx")]),_vm._v(" code, it\'s very risky to update the RegEx when something unexpected happened.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("// Remove data attributes from tags\\nhtml = html.replace(/\\\\s*data-(?:[^=>]*=\\"[^\\"]*\\"|[^=>\\\\s]*)/gi, \'\')\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("In non-AMP pages, I use "),_c(\'a\',{attrs:{"href":"https://github.com/mazipan/vue-tiny-lazyload-img"}},[_vm._v("VueTinyLazyloadImg ↗️")]),_vm._v(" library to creating lazy load image. For AMP we don\'t need this library anymore because amp have "),_c(\'code\',{pre:true},[_vm._v("amp-img")]),_vm._v(" component that already support lazy load by default.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("Using "),_c(\'code\',{pre:true},[_vm._v("amp-img")]),_vm._v(" make my existing function in lazy load become invalid for AMP because with in existing function I put attribut "),_c(\'code\',{pre:true},[_vm._v("data-src")]),_vm._v(" to load the original source of image and using "),_c(\'code\',{pre:true},[_vm._v("src")]),_vm._v(" for placeholder image. This thing need to be adjust for AMP with replacing "),_c(\'code\',{pre:true},[_vm._v("data-src")]),_vm._v(" attribute with "),_c(\'code\',{pre:true},[_vm._v("src")]),_vm._v(" and delete placeholder image.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("function replaceLazyloadImg (str) {\\n  return str && str.replace(/\\"src\\":(?:[^=>][^\\"]*\\",\\"data-src\\"|[^=>\\"]*)/gi, \'\\"src\\"\')\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("This is the step that I haven\'t done when this article published. All the image tag should have "),_c(\'code\',{pre:true},[_vm._v("height")]),_vm._v(" and "),_c(\'code\',{pre:true},[_vm._v("width")]),_vm._v(" attribute.")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("You can put link canonical under "),_c(\'code\',{pre:true},[_vm._v("<head>")]),_vm._v(" tag in AMP page like in this below code :")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<head>\\n  <link rel=\\"canonical\\" href=\\"url-to-normal-page\\"></link>\\n</head>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("In our normal page we can add "),_c(\'code\',{pre:true},[_vm._v("amphtml")]),_vm._v(" link, see this below code:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<link rel=\\"amphtml\\" href=\\"url-to-amp-page\\"></link>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("In Nuxt.js, we can add this meta tag via "),_c(\'code\',{pre:true},[_vm._v("head()")]),_vm._v(" in our .vue files, see this below sample:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("export default {\\n  head () {\\n    const url = `${this.productionUrl}/${this.meta.slug}`\\n    return {\\n      link: [\\n        { hid: \'canonical\', rel: \'canonical\', href: url }\\n      ]\\n    }\\n  }\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("And this below code is sample to insert tag "),_c(\'code\',{pre:true},[_vm._v("amphtml")]),_vm._v(" in normal page:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("export default {\\n  head () {\\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\\n    return {\\n      link: [\\n        { hid: \'amphtml\', rel: \'amphtml\', href: ampUrl }\\n      ]\\n    }\\n  }\\n}\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<script async custom-element=\\"amp-analytics\\" src=\\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\\"><\/script>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-html"}},[_vm._v("<amp-analytics type=\'googleanalytics\'>\\n  <script type=\'application/json\'>\\n    {\\n      \\"vars\\": {\\n        \\"account\\": \\"UA-12345678-X\\"\\n      },\\n      \\"triggers\\": {\\n        \\"trackPageview\\": {\\n          \\"on\\": \\"visible\\",\\n          \\"request\\": \\"pageview\\"\\n        }\\n      }\\n    }\\n  <\/script>\\n</amp-analytics>\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("I update the "),_c(\'code\',{pre:true},[_vm._v("ampify")]),_vm._v(" script to insert analytics into our AMP pages:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("const ampScript = `<script async src=\\"https://cdn.ampproject.org/v0.js\\"><\/script>\\n<script async custom-element=\\"amp-analytics\\" src=\\"https://cdn.ampproject.org/v0/amp-analytics-0.1.js\\"><\/script>`\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_vm._v("We also insert page view tracker before close tag "),_c(\'code\',{pre:true},[_vm._v("</body>")]),_vm._v(" like this below code:")]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'pre\',[_c(\'code\',{pre:true,attrs:{"class":"language-javascript"}},[_vm._v("// Add AMP analytics\\nhtml = html.replace(\'</body>\',\\n`<amp-analytics type=\'googleanalytics\'>\\n    <script type=\'application/json\'>\\n      {\\n        \\"vars\\": {\\n          \\"account\\": \\"UA-12345678-X\\"\\n        },\\n        \\"triggers\\": {\\n          \\"trackPageview\\": {\\n            \\"on\\": \\"visible\\",\\n            \\"request\\": \\"pageview\\"\\n          }\\n        }\\n      }\\n    <\/script>\\n  </amp-analytics>\\n</body>`)\\n")])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp"}},[_vm._v("https://search.google.com/test/amp")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://validator.ampproject.org/"}},[_vm._v("https://validator.ampproject.org/")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'ul\',[_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp"}},[_vm._v("Homepage")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout"}},[_vm._v("About Page")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F"}},[_vm._v("Article Page - without any images")])]),_vm._v(" "),_c(\'li\',[_c(\'a\',{attrs:{"href":"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F"}},[_vm._v("Article Page - with images")])])]) },function () { var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c(\'p\',[_c(\'a\',{attrs:{"href":"https://github.com/mazipan/blog-2.0"}},[_vm._v("https://github.com/mazipan/blog-2.0 ↗️")])]) }]',component:{data:function(){return{templateRender:null}},render:function(e){return this.templateRender?this.templateRender():e("div","Rendering")},created:function(){this.templateRender=function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("div",{staticClass:"content-markdown"},[n("h2",[e._v("About AMP")]),e._v(" "),e._m(0),e._v(" "),n("p",[e._v("AMP is recommended by Google because it is very user centrict. Google also will prioritize the contents with AMP support with adding a badge in the search results to indicate AMP. Google also support with adding the caches to boost the first load speed into the limit which make AMP is the best choice for first user landing from the search result.")]),e._v(" "),n("img",{directives:[{name:"lazyload",rawName:"v-lazyload"}],attrs:{src:"/images/placeholder-1x1.png","data-src":"/content-images/generate-amp-pages-in-nuxtjs/mazipan-amp.png",alt:"Mazipan AMP",height:"200px",width:"200px"}}),e._v(" "),n("h2",[e._v("Basics for Creating AMP")]),e._v(" "),n("p",[e._v("AMP is seperate pages with the normal one. This is because AMP have different strict rule that make us harder to implement in our existing technology stack that usually become very depends on JavaScript.")]),e._v(" "),e._m(1),e._v(" "),n("p",[e._v("If in normal HTML we can have this below code:")]),e._v(" "),e._m(2),e._v(" "),e._m(3),e._v(" "),e._m(4),e._v(" "),e._m(5),e._v(" "),n("p",[e._v("After adding the identifier, we need to add the main AMP engine script with this below code:")]),e._v(" "),e._m(6),e._v(" "),n("p",[e._v("We also need to add CSS boilerplate for all AMP pages:")]),e._v(" "),e._m(7),e._v(" "),n("p",[e._v("The things we need to be noted is AMP is not allowing any custom JavaScript or any external third party JavaScript link.")]),e._v(" "),e._m(8),e._v(" "),e._m(9),e._v(" "),e._m(10),e._v(" "),e._m(11),e._v(" "),n("h2",[e._v("Generate AMP in Nuxt.js")]),e._v(" "),n("p",[e._v("Creating AMP pages in JavaScript framework was like an impossible things to do. This is because JavaScript is forbidden in AMP, while in JavaScript framework become the main technology to be used.")]),e._v(" "),n("p",[e._v("Today, JavaScript framework already have power to generate static pages like Nuxt.js already done. In my blog itself, I use Nuxt.js for generate static pages to simplify my deployment process. Unfortunately, the static files that generated bu Nuxt.js is bloated with many external JavaScript that need to be clean up first. So the hardest task to generate AMP in Nuxt.js is cleaning process itself.")]),e._v(" "),n("p",[e._v("These are steps that I have been done in generate AMP for my blog:")]),e._v(" "),n("h3",[e._v("1. Creating new pages")]),e._v(" "),e._m(12),e._v(" "),n("h3",[e._v("2. Remove unused codes")]),e._v(" "),e._m(13),e._v(" "),n("h3",[e._v("3. Adding hooks in generate")]),e._v(" "),e._m(14),e._v(" "),e._m(15),e._v(" "),e._m(16),e._v(" "),n("h3",[e._v("4. Manipulate HTML output")]),e._v(" "),e._m(17),e._v(" "),e._m(18),e._v(" "),n("p",[e._v("We can just copy-paste this below code:")]),e._v(" "),e._m(19),e._v(" "),e._m(20),e._v(" "),e._m(21),e._v(" "),e._m(22),e._v(" "),n("h3",[e._v("5. Change all scoped style to global style")]),e._v(" "),e._m(23),e._v(" "),n("p",[e._v("And I realize that this below code make weird result:")]),e._v(" "),e._m(24),e._v(" "),n("p",[e._v("The above code made all my scoped style become invalid because wrong replace process. The easiest part for me to solve this thing is move all scoped style into global style. But this task can be done easily because with unscoped style I need to apply CSS module architecture to keep the CSS from one components is not affecting any other component. I prefer use BEM CSS because of my experience of using this CSS convention.")]),e._v(" "),n("p",[e._v("This step is optional for you if you can update the Regex part that made weird replace process.")]),e._v(" "),n("h3",[e._v("6. Change all lazy load images")]),e._v(" "),e._m(25),e._v(" "),e._m(26),e._v(" "),n("p",[e._v("You can see the RegEX function in this below sample:")]),e._v(" "),e._m(27),e._v(" "),n("h3",[e._v("7. Adding fix size for images")]),e._v(" "),e._m(28),e._v(" "),n("h3",[e._v("8. Adding canonical")]),e._v(" "),n("p",[e._v("We need to linking our AMP with each respective normal pages that have same content with our AMP.")]),e._v(" "),e._m(29),e._v(" "),e._m(30),e._v(" "),e._m(31),e._v(" "),e._m(32),e._v(" "),e._m(33),e._v(" "),e._m(34),e._v(" "),e._m(35),e._v(" "),e._m(36),e._v(" "),n("h3",[e._v("9. Adding Google Analytics")]),e._v(" "),n("p",[e._v("Adding Google Analytics in AMP is quite different with the normal page. In short, we just need to add this below script to adding Google Analytics engine in our AMP pages:")]),e._v(" "),e._m(37),e._v(" "),n("p",[e._v("Also placing this below simple tracker to tracking page view state:")]),e._v(" "),e._m(38),e._v(" "),e._m(39),e._v(" "),e._m(40),e._v(" "),e._m(41),e._v(" "),e._m(42),e._v(" "),n("h2",[e._v("Validate AMP Pages")]),e._v(" "),n("p",[e._v("Not all AMP can be shown in Google Search result, only the valid pages that can have badge in search result. So we need to test the validity first before publishing our AMP pages. There are some alternatives outside to test AMP validation, two website that I can mention are:")]),e._v(" "),e._m(43),e._v(" "),n("p",[e._v("For my blog itself, you can see the test results in below list:")]),e._v(" "),e._m(44),e._v(" "),n("h2",[e._v("Github Repo")]),e._v(" "),e._m(45),e._v(" "),n("h3",[e._v("Hopefully useful...")])])},this.$options.staticRenderFns=[function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("AMP (Accelerated Mobile Pages - "),t("a",{attrs:{href:"https://amp.dev"}},[this._v("amp.dev ↗️")]),this._v(") is Google's iniisatif for helping publishers, developers and website owner to serve website with fast first load time even nearly instant in mobile devices. For achieving that instant loading is not free, this can be done by AMP with applying so many strict rule for websites. We can say that AMP is strip down all your custom JavaScript to guarantee your website have instant load time.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("For creating new AMP pages, first we need to add an identifier in "),t("code",{pre:!0},[this._v("html")]),this._v(" tag to make browser know that the pages is AMP version.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<html>\n  <head></head>\n  <body></body>\n<html>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In AMP we will add emoji ⚡ in our "),t("code",{pre:!0},[this._v("html")]),this._v(" tag, see below example:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<html ⚡>\n  <head></head>\n  <body></body>\n<html>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Or we can just change the ⚡ emoji with attribute "),t("code",{pre:!0},[this._v("amp")]),this._v(" without any values if we didn't support emoji.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("So do with CSS file, we can't load any external CSS file. All style need to be loaded internally using tag "),t("code",{pre:!0},[this._v("amp-custom")]),this._v(" like below example code:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v("<style amp-custom>\n  .custom-class {}\n</style>\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In AMP, we can use any "),t("code",{pre:!0},[this._v("!important")]),this._v(" in our CSS code.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Basically, we can use any HTML tag inside our "),t("code",{pre:!0},[this._v("<body>")]),this._v(" tag. But AMP already creating many components to help us in creating a common layout or functionality. Better for us to read in "),t("a",{attrs:{href:"https://amp.dev/documentation/components/?format=websites"}},[this._v("AMPs official documentations")]),this._v(" about the components that already created by AMP teams so we can have better visibility when creating AMP pages in the future.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("First of all, I need to create new pages under the same root url "),t("code",{pre:!0},[this._v("/amp/**")]),this._v(" with nearly same content with the normal pages. This is for helping us to differentiate AMP pages with the normal pages so we can running clean up process is only for AMP pages an skip the normal pages.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Because AMP is not allowing any custom JavaScript actions, so any codes in our AMP pages which placed under "),t("code",{pre:!0},[this._v("methods")]),this._v(" in Vue's single file components file are need to be removed. This code become unused because we need to strip down all interactions that require any custom Javascript.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("I use "),t("code",{pre:!0},[this._v("generate")]),this._v(" command in Nuxt.js to creating static files for my blog so I need to add hooks to detect when this command is executed. In Nuxt, this task can be done with adding this below code in "),t("code",{pre:!0},[this._v("nuxt.config.js")]),this._v(" file like this below example:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("module.exports = {\n  hooks: {\n    'generate:page': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log('processing amp file: ', page.route)\n      }\n    }\n  },\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The code above is for inserting a process when Nuxt execute command "),t("code",{pre:!0},[this._v("generate")]),this._v(" and we adding "),t("em",[this._v("Regular Expressions")]),this._v(" to detect only the AMP pages route that have added process and skip all the normal pages.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("From our sample code above, we have "),t("code",{pre:!0},[this._v("page")]),this._v(" object as parameter in our generate hooks. If we get property "),t("code",{pre:!0},[this._v("page.html")]),this._v(" we can get the HTML string as our final output as HTML file.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("The good thing from Internet is there are many good people there. I found the article from "),t("a",{attrs:{href:"https://toor.co/blog/amp-pages-using-nuxt-js/"}},[this._v("toor.co ↗️")]),this._v(" that share about cleaning up HTML string from Nuxt to support AMP.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("const ampScript = '<script async src=\"https://cdn.ampproject.org/v0.js\"><\/script>'\nconst ampBoilerplate = '<style amp-boilerplate>body{-webkit-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-moz-animation:-amp-start 8s steps(1,end) 0s 1 normal both;-ms-animation:-amp-start 8s steps(1,end) 0s 1 normal both;animation:-amp-start 8s steps(1,end) 0s 1 normal both}@-webkit-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-moz-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-ms-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@-o-keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}@keyframes -amp-start{from{visibility:hidden}to{visibility:visible}}</style><noscript><style amp-boilerplate>body{-webkit-animation:none;-moz-animation:none;-ms-animation:none;animation:none}</style></noscript>'\n\nmodule.exports = (html) => {\n  // Add ⚡ to html tag\n  html = html.replace(/<html/gi, '<html ⚡')\n\n  // Combine css into single tag\n  let styleConcat = ''\n  html = html.replace(/<style[^>]*data-vue-ssr[^>]*>(.*?)?<\\/style>/gi, (match, sub) => {\n    styleConcat += sub\n    return ''\n  })\n  html = html.replace('</head>', `<style amp-custom>${styleConcat}</style></head>`)\n\n  // Remove preload and prefetch tags\n  html = html.replace(/<link[^>]*rel=\"(?:preload|prefetch)?\"[^>]*>/gi, '')\n\n  // Remove amphtml tag\n  html = html.replace(/<link[^>]*rel=\"(?:amphtml)?\"[^>]*>/gi, '')\n\n  // Remove data attributes from tags\n  html = html.replace(/\\s*data-(?:[^=>]*=\"[^\"]*\"|[^=>\\s]*)/gi, '')\n\n  // Remove JS script tags except for ld+json\n  html = html.replace(/<script\\b[^<]*(?:(?!<\\/script>)<[^<]*)*<\\/script>/gi, (match) => {\n    return (/application\\/ld\\+json/gi.test(match)) ? match : ''\n  })\n\n  // Replace img tags with amp-img\n  html = html.replace(/<img([^>]*)>/gi, (match, sub) => {\n    return `<amp-img ${sub} layout=intrinsic></amp-img>`\n  })\n\n  // Add AMP script before </head>\n  html = html.replace('</head>', ampScript + ampBoilerplate + '</head>')\n\n  return html\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You can check the detail of each process with reading the comments in that code. Basically we just "),t("em",[this._v("replace")]),this._v(" the characters we didn't need with "),t("em",[this._v("RegEx")]),this._v(" and adding AMP support script. We adding emoji ⚡, remove all external JavaScript, combine all internal CSS into one tag under "),t("code",{pre:!0},[this._v("<style amp-custom>")]),this._v(" and any other tasks.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("This functions is put in "),t("code",{pre:!0},[this._v("plugins/ampify.js")]),this._v(" directory that will be called in generate hook generate like this below sample:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("const ampify = require('./plugins/ampify')\n\nmodule.exports = {\n  hooks: {\n    'generate:page': (page) => {\n      if (/^\\/amp/gi.test(page.route)) {\n        console.log('processing amp file: ', page.route)\n        page.html = ampify(page.html)\n      }\n    }\n  },\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("Because I am not good enough to playing with "),t("em",[this._v("RegEx")]),this._v(" code, it's very risky to update the RegEx when something unexpected happened.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('// Remove data attributes from tags\nhtml = html.replace(/\\s*data-(?:[^=>]*="[^"]*"|[^=>\\s]*)/gi, \'\')\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In non-AMP pages, I use "),t("a",{attrs:{href:"https://github.com/mazipan/vue-tiny-lazyload-img"}},[this._v("VueTinyLazyloadImg ↗️")]),this._v(" library to creating lazy load image. For AMP we don't need this library anymore because amp have "),t("code",{pre:!0},[this._v("amp-img")]),this._v(" component that already support lazy load by default.")])},function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("p",[e._v("Using "),n("code",{pre:!0},[e._v("amp-img")]),e._v(" make my existing function in lazy load become invalid for AMP because with in existing function I put attribut "),n("code",{pre:!0},[e._v("data-src")]),e._v(" to load the original source of image and using "),n("code",{pre:!0},[e._v("src")]),e._v(" for placeholder image. This thing need to be adjust for AMP with replacing "),n("code",{pre:!0},[e._v("data-src")]),e._v(" attribute with "),n("code",{pre:!0},[e._v("src")]),e._v(" and delete placeholder image.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('function replaceLazyloadImg (str) {\n  return str && str.replace(/"src":(?:[^=>][^"]*","data-src"|[^=>"]*)/gi, \'"src"\')\n}\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("This is the step that I haven't done when this article published. All the image tag should have "),t("code",{pre:!0},[this._v("height")]),this._v(" and "),t("code",{pre:!0},[this._v("width")]),this._v(" attribute.")])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("You can put link canonical under "),t("code",{pre:!0},[this._v("<head>")]),this._v(" tag in AMP page like in this below code :")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<head>\n  <link rel="canonical" href="url-to-normal-page"></link>\n</head>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In our normal page we can add "),t("code",{pre:!0},[this._v("amphtml")]),this._v(" link, see this below code:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<link rel="amphtml" href="url-to-amp-page"></link>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("In Nuxt.js, we can add this meta tag via "),t("code",{pre:!0},[this._v("head()")]),this._v(" in our .vue files, see this below sample:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("export default {\n  head () {\n    const url = `${this.productionUrl}/${this.meta.slug}`\n    return {\n      link: [\n        { hid: 'canonical', rel: 'canonical', href: url }\n      ]\n    }\n  }\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("And this below code is sample to insert tag "),t("code",{pre:!0},[this._v("amphtml")]),this._v(" in normal page:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v("export default {\n  head () {\n    const ampUrl = `${this.productionUrl}/amp/${this.meta.slug}`\n    return {\n      link: [\n        { hid: 'amphtml', rel: 'amphtml', href: ampUrl }\n      ]\n    }\n  }\n}\n")])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-html"}},[this._v('<amp-analytics type=\'googleanalytics\'>\n  <script type=\'application/json\'>\n    {\n      "vars": {\n        "account": "UA-12345678-X"\n      },\n      "triggers": {\n        "trackPageview": {\n          "on": "visible",\n          "request": "pageview"\n        }\n      }\n    }\n  <\/script>\n</amp-analytics>\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("I update the "),t("code",{pre:!0},[this._v("ampify")]),this._v(" script to insert analytics into our AMP pages:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('const ampScript = `<script async src="https://cdn.ampproject.org/v0.js"><\/script>\n<script async custom-element="amp-analytics" src="https://cdn.ampproject.org/v0/amp-analytics-0.1.js"><\/script>`\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[this._v("We also insert page view tracker before close tag "),t("code",{pre:!0},[this._v("</body>")]),this._v(" like this below code:")])},function(){var e=this.$createElement,t=this._self._c||e;return t("pre",[t("code",{pre:!0,attrs:{class:"language-javascript"}},[this._v('// Add AMP analytics\nhtml = html.replace(\'</body>\',\n`<amp-analytics type=\'googleanalytics\'>\n    <script type=\'application/json\'>\n      {\n        "vars": {\n          "account": "UA-12345678-X"\n        },\n        "triggers": {\n          "trackPageview": {\n            "on": "visible",\n            "request": "pageview"\n          }\n        }\n      }\n    <\/script>\n  </amp-analytics>\n</body>`)\n')])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("a",{attrs:{href:"https://search.google.com/test/amp"}},[this._v("https://search.google.com/test/amp")])]),this._v(" "),t("li",[t("a",{attrs:{href:"https://validator.ampproject.org/"}},[this._v("https://validator.ampproject.org/")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("ul",[t("li",[t("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp"}},[this._v("Homepage")])]),this._v(" "),t("li",[t("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Fabout"}},[this._v("About Page")])]),this._v(" "),t("li",[t("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Feslint-formatter-html-extended%2F"}},[this._v("Article Page - without any images")])]),this._v(" "),t("li",[t("a",{attrs:{href:"https://search.google.com/test/amp?url=https%3A%2F%2Fwww.mazipan.xyz%2Famp%2Ftasting-reasonml-for-react%2F"}},[this._v("Article Page - with images")])])])},function(){var e=this.$createElement,t=this._self._c||e;return t("p",[t("a",{attrs:{href:"https://github.com/mazipan/blog-2.0"}},[this._v("https://github.com/mazipan/blog-2.0 ↗️")])])}]}}}}}}]);